{"version":3,"sources":["App.js","common/common.js","components/sqlProcess.jsx","components/jsonProcess.jsx","components/replaceProcess.jsx","components/mediaProcess.jsx","common/config.js","components/Elearning/practWords.jsx","components/Elearning/notifyAuto.jsx","components/Elearning/api/sheetDataRepository.js","components/Elearning/listenPract.jsx","reportWebVitals.js","index.js"],"names":["App","className","to","randomDate","start","end","Date","getTime","Math","random","formatDate","date","document","getElementById","value","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","checkType","line","arrayType","result","forEach","type","includes","replaceArr","valRpl","i","length","replaceAll","checkIncludesArr","arrayStr","sensitive","toUpperCase","str","SqlProcess","INDENT_COMMA","DATA_NULL","CREATE_TABLE","ARR_NOT_FIELDNAME","INDENT_FIELD_NAME","NUMBER_TYPE","DATE_TYPE","NOT_NULL","useState","defaultValueInt","setDefaultValueInt","lineNumber","setLineNumber","dataCharFixed","setDataCharFixed","dataCharUnique","tableName","setTableName","replaceFrom","setReplaceFrom","replaceTo","setReplaceTo","setResult","Map","uniqueMap","setUniqueMap","STR_VALUE","STR_WHERE","useEffect","textContent","getListLineField","txtField","split","getStrWithUpperCaseOption","toLowerCase","getTableName","lineInputs","formatFieldName","tableNameDefault","arrayRepl","trim","_","isNull","checkLineIsField","trLine","getArrayFieldName","arrFieldName","fieldName","substring","indexOf","push","genFieldNameInsert","sqlResult","genDataInput","isEmpty","cmbTypeChar","flagComa","j","typeNumber","indentComData","dataStr","lengthData","orgLine","lastIndexOf","strValueField","get","intValue","set","String","arrValueInt","map","Number","maxvalue","max","apply","randomTemplateStr","genNuberWComman","randomStr","firstNumber","secondNumber","data1","data2","numOfCharater","charAt","floor","a","navigator","clipboard","readText","handleChange","typeName","id","name","onChange","e","target","onClick","pasteData","chkDeleteOldData","getElementsByClassName","checked","onProcess","dataTemplate","resultStr","arrFieldNameS","onGenCodeSql","class","writeText","JsonProcess","NEW_LINE","QUOTES","COLON","END_LINE","NUMBER_TYPES","STRING_TYPES","DATE_TYPES","LIST_TYPES","COMMENT_INDENT","NUMBER_IND","STRING_IND","DATE_IND","dataChar","setDataChar","masterName","setMasterName","dataLength","setDataLength","jsonResult","TAB","typeData","getTypeData","genData","ReplaceProcess","style","display","processingReplace","regex","txtArr","trSplitLine","trSplitElement","trLines","trResult","trElements","txtIntput","onChooseRadio","onChooseText","accept","ele","getElementsByName","typeInput","file","fr","FileReader","onload","this","onloadend","console","log","join","readAsText","files","MediaProcess","title","width","height","src","txtSrcMedia","url","txtWidthValue","txtHeight","setAttribute","onResize","notify","sheetDefault","listen","apiKey","clientId","scope","discoveryDocs","spreadsheetId","PractWords","props","question","setQuestion","answer","setAnswer","errorMs","setErrorMs","showAns","setShowAns","lastAnsw","setLastAnsw","arrLineTemp","setArrLineTemp","cloneDeep","items","isLoadQuestion","onChangeQuestion","item","arrTemp","oderRandom","index","splice","shift","customDefine","vi","eng","onCheck","ans","answ","onKeyDown","key","handleKeyDown","speakText","NotifyAuto","useSpeechSynthesis","onEnd","speak","voices","setItems","oderRandomS","setOderRandomS","setIsLoadQuestion","voiceIndex","setVoiceIndex","voiceIndexVie","setVoiceIndexVie","rate","setRate","sheet","setSheet","speakStrEng","setSpeakStrEng","speakStrVie","setSpeakStrVie","strContinue","setStrContinue","lineSheet","setLineSheet","useCookies","cookies","setCookie","isStop","setIsStop","intervalId","setIntervalId","countNotify","setCountNotify","IND_SPEAK_NOTI_VOICE","IND_SPEAK_NO_VOICE","IND_SPEAK_NO_NOTI","IND_SPEAK_NOTI_NO_VIE","IND_SPEAK_NO_NOTI_NO_VIE","IND_SPEAK_NO_NOTI_ENG","IND_SPEAK_ALL_ENG","IND_SPEAK_NOTI_ENG","getDataFromExcel","cookieContinue","option","lang","valueTime","setTimeout","execute","onGSheetApi","expires","setDate","getDate","path","gapi","load","initClient","arrList","arrIndexNotNotify","sort","b","listTemp","inx","meaning","strResult","vsheet","client","init","config","then","callback","window","sheets","spreadsheets","values","range","response","data","filter","error","onLoad","arr","indexOrg","findIndex","x","toString","strC","onNotiExc","Notification","permission","isSpeak","engStr","viStr","isEqual","requestPermission","p","catch","err","onHideWhenPrac","speakStr","isEng","vVoice","vVoiceVie","vrate","utterance","SpeechSynthesisUtterance","text","voice","volume","event","voiceURI","flexDirection","marginBottom","htmlFor","min","defaultValue","step","clearInterval","prac","onShowPract","ListenPract","ALL_WORDS","classItems","setClassItems","indexClass","setIndexClass","ansList","setAnsList","ansListTemp","setAnsListTemp","itemAns","classItem","indexTemp","arrClassItem","arrAnsList","loadListenSheet","changeAns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","element"],"mappings":"gPAkBeA,MAhBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACC,gCAEA,cAAC,IAAD,CAAMC,GAAG,OAAT,iBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,8B,sDCVQC,EAAW,SAACC,EAAOC,GAC5B,OAAO,IAAIC,KAAKF,EAAMG,UAAYC,KAAKC,UAAYJ,EAAIE,UAAYH,EAAMG,aAEhEG,EAAW,SAACC,GACrB,IAAID,EAAaE,SAASC,eAAe,cAAcC,MACjDC,EAAI,IAAIT,KAAKK,GACbK,EAAK,IAAIC,KAAKC,eAAe,KAAM,CAAEC,KAAM,YAAaC,OAAOL,GAC/DM,EAAK,IAAIJ,KAAKC,eAAe,KAAM,CAAEI,MAAO,YAAaF,OAAOL,GAChEQ,EAAK,IAAIN,KAAKC,eAAe,KAAM,CAAEM,IAAK,YAAaJ,OAAOL,GACpE,OAAOL,GACH,IAAK,aACD,MAAM,GAAN,OAAUM,EAAV,YAAgBK,EAAhB,YAAsBE,GAC1B,IAAK,aACD,MAAM,GAAN,OAAUP,EAAV,YAAgBK,EAAhB,YAAsBE,GAC1B,IAAK,WACD,MAAM,GAAN,OAAUP,GAAV,OAAeK,GAAf,OAAoBE,GACxB,IAAK,aACD,MAAM,GAAN,OAAUA,EAAV,YAAgBF,EAAhB,YAAsBL,GAC1B,IAAK,aACD,MAAM,GAAN,OAAUO,EAAV,YAAgBF,EAAhB,YAAsBL,GAC1B,IAAK,WACD,MAAM,GAAN,OAAUO,GAAV,OAAeF,GAAf,OAAoBL,GAI5B,MAAM,GAAN,OAAUA,GAAV,OAAeN,GAAf,OAA4BW,GAA5B,OAAiCX,GAAjC,OAA8Ca,IAErCE,EAAU,SAACC,EAAMC,GAC1B,IAAIC,GAAS,EAMb,OALAD,EAAUE,SAAQ,SAAAC,GACVJ,EAAKK,SAASD,KACdF,GAAO,MAGRA,GAEEI,EAAY,SAACN,EAAMC,EAAWM,GACvC,IAAI,IAAIC,EAAE,EAAGA,EAAEP,EAAUQ,OAAQD,IAAI,CAClC,IAAIJ,EAAOH,EAAUO,GACpBR,EAAOA,EAAKU,WAAL,UAAmBN,GAAQG,GAGtC,OAAOP,GAEEW,EAAkB,SAACX,EAAMY,EAAUC,GACxCA,IACAb,EAAMA,EAAKc,eAEf,IAAI,IAAIN,EAAE,EAAGA,EAAEI,EAASH,OAAQD,IAAI,CACjC,IAAKO,EAAKH,EAASJ,GACnB,GAAGR,EAAKK,SAASU,GAChB,OAAO,EAIX,OAAO,GCsZIC,EAzcI,WAEf,IAGMC,EAAe,IAEfC,EAAY,OACZC,EAAe,eAEfC,EAAoB,CAAC,WAAYD,gBAAoB,UAAW,WAAY,YAAa,YACzFE,EAAoB,CAAC,IAAK,IAAN,KAEpBC,EAAc,CAAC,UAAW,WAAY,QAAS,OAAQ,WAAY,WAAY,UAAW,WAC9F,SAAU,QAAS,cAAe,SAAU,aACxCC,EAAY,CAAC,QAAS,aAAc,YAAa,QAAS,iBAAkB,aAAc,oBAC1FC,EAAW,CAAC,YAElB,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0CJ,mBAAS,KAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA4CN,mBAAS,KAArD,mBAAOO,EAAP,KACA,GADA,KACkCP,mBAAS,KAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAAsCT,mBAAS,IAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAAkCX,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAA4Bb,mBAAS,IAArC,mBAAOvB,EAAP,KAAeqC,EAAf,KAEA,EAAkCd,mBAAS,IAAIe,KAA/C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,GAAY,aAGZC,GAAY,UAKlBC,qBAAU,WACN3D,SAASC,eAAe,YAAY2D,YAAc,gCAClD5D,SAASC,eAAe,gBAAgBC,MAAQ,MAEjD,IAEH,IAAM2D,GAAmB,WAErB,IAAIC,EAAW9D,SAASC,eAAe,YAAYC,MAGnD,OAFA4D,EAAWA,EAAStC,WAAW,KA7CJ,MA8CDuC,MA9CC,MAkEzBC,GAA4B,SAACnC,GAE/B,MAAyB,UADP7B,SAASC,eAAe,eAAeC,MACrB2B,EAAMA,EAAIoC,eAE5CC,GAAe,SAACC,GAClB,IAAIC,EAAkBpE,SAASC,eAAe,sBAAsBC,MAChEmE,EAAmB,KAEvB,GAAI5C,EAAiB0C,EAAW,GAAI,CAAClC,IAAgB,GAAQ,CACzD,IAAIqC,EAAY,CAACrC,EAAc,KAC/BoC,EAAmBjD,EAAW+C,EAAW,GAAIG,EAAW,IAAIC,OACpC,WAApBH,IACAC,EAAmBjD,EAAWiD,EAAkBlC,EAAmB,KAG3E,OAASqC,IAAEC,OAAO1B,IAAmC,IAArBA,EAAUxB,OAAgB8C,EAAmBtB,GA2D3E2B,GAAmB,SAACC,GACtB,OAA6B,IAAzBA,EAAOJ,OAAOhD,SAAgBE,EAAiBkD,EAAQzC,GAAmB,IAK5E0C,GAAoB,SAACT,GAGvB,IAFA,IAAIC,EAAkBpE,SAASC,eAAe,sBAAsBC,MAChE2E,EAAe,GACVvD,EAAI,EAAGA,EAAI6C,EAAW5C,OAAQD,IAAK,CACxC,IAAIqD,EAASR,EAAW7C,GAAGiD,OAC3B,GAAIG,GAAiBC,GAAS,CAC1B,IAAIG,EAAYH,EAAOI,UAAU,EAAGJ,EAAOK,QApJlC,MAqJe,WAApBZ,IACAU,EAAY1D,EAAW0D,EAAW3C,EAAmB,KAEzD0C,EAAaI,KAAKH,EAAUP,SAGpC,OAAOM,GAELK,GAAqB,SAACf,GAIxB,IAFA,IAAIgB,EAAYnB,GAxII,gBAwIyCE,GAAaC,GAAc,IACpFU,EAAeD,GAAkBT,GAC5B7C,EAAI,EAAGA,EAAIuD,EAAatD,OAAQD,IAAK,CAE1C6D,GADgBN,EAAavD,GAAGiD,OAEhCY,GAAc7D,IAAMuD,EAAatD,OAAS,EAAK,GAAK,KAExD,OAAO4D,GAGX,SAASC,GAAajB,GAClB,IAAIK,IAAEa,QAAQlB,GAAd,CAGA,IAAImB,EAActF,SAASC,eAAe,eAAeC,MACrDiF,EAAYD,GAAmBf,GAEnCgB,GAA+B,UAAhBG,EAA2B7B,GAAYA,GAAUQ,cAEhE,IADA,IAAIsB,GAAW,EACNC,EAAI,EAAGA,EAAIrB,EAAW5C,OAAQiE,IAAK,CACxC,IAAIb,EAASR,EAAWqB,GAAGjB,OAAO3C,cAC9B6D,GAAa,EAEjB,GAAIf,GAAiBC,GAAS,CAE1B,IAAIe,EAAgB9C,EAChB+C,EAAU,GACVC,EAAa,EACjB,GAAIjB,EAAOxD,SAASuE,GAAgB,CAChC,IAAIG,EAAU1B,EAAWqB,GAAGjB,OAC5BoB,EAAUE,EAAQd,UAAUc,EAAQb,QAAQU,GAAiB,EAAGG,EAAQC,YAAYJ,SACjF,GAAIf,EAAOxD,SAAS2B,GAAiB,CACxC,IAAIgC,EAAYH,EAAOI,UAAU,EAAGJ,EAAOK,QA/LtC,MAgMDe,EAAgB,GAEpB,GADAA,EAAgBxC,EAAUyC,IAAIlB,GAC1BN,IAAEa,QAAQU,GAAgB,CAC1B,IAAIE,EAAWtB,EAAOI,UAAUJ,EAAOK,QAAQlC,GAAkB,EAAG6B,EAAOmB,YAAYhD,IACvFU,EAAaD,EAAU2C,IAAIpB,EAAWqB,OAAOF,KAC7CN,EAAUQ,OAAOF,OACd,CACH,IACIG,EADWL,EAAchC,MAAM,KACRsC,IAAIC,QAC3BC,EAAW3G,KAAK4G,IAAIC,MAAM7G,KAAMwG,GAAe,EAEnD5C,EAAaD,EAAU2C,IAAIpB,EAAWiB,EAAgB,IAAOQ,IAC7DZ,EAAUQ,OAAOI,GAEnB1F,EAAU8D,EAAQvC,KACpBuD,EAAU,IAAIA,OAEX,CACC9E,EAAU8D,EAAQrC,KAElBqC,EAASvD,EAAWuD,EAAQrC,EAAU,MAE1CqC,EAASA,EAAOJ,QACLQ,UAAUJ,EAAOpD,OAAS,EAAGoD,EAAOpD,UAAYQ,IACvD4C,GAAkB5C,GAEtB,IAAI2E,EAAoB,iEACpB7F,EAAU8D,EAAQvC,KAClBsE,EAAoB,YACpBjB,GAAa,EACbG,EAAapD,GAEb3B,EAAU8D,EAAQtC,GAClBsD,EAAU7F,EAAWP,EAAW,IAAIG,KAAK,KAAM,EAAG,GAAI,IAAIA,OAEtDiF,EAAOZ,MAAM,KAAKxC,OAAS,IAAM,EACjCoE,EAAUgB,GAAgBhC,EAAQ+B,IAGf,IAAfd,IAEAA,GADAjB,EAASA,EAAOJ,QACIQ,UAAUJ,EAAOmB,YA5O/B,KA4OwE,EAAGnB,EAAOK,QA3OpF,OA6ORW,EAAUiB,GAAUhB,EAAYc,IAGpB1G,SAASC,eAAe,iBAAiBC,QACvC8B,IAClB2D,EAAU3D,IAID,IAAbuD,IACAJ,GAAa,MAEjBI,GAAW,EACPI,EAAQ/D,gBAAkBI,IAC1ByD,GAAa,GAEjBN,GAAaM,EAAaE,EAAU,IAAOA,EAAU,KAO7D,OAFAR,GAAa,MAKjB,SAASwB,GAAgBhC,EAAQ+B,GAC7B,IAAIf,EAAU,GACVkB,EAAclC,EAAOI,UAAUJ,EAAOmB,YA1QZ,KA0QqD,EAAGnB,EAAOK,QAAQjD,IACjG+E,EAAenC,EAAOI,UAAUJ,EAAOK,QAAQjD,GAAgB,EAAG4C,EAAOK,QA1QjD,MA2QxB+B,EAAQH,GAAUC,EAAcC,EAAe,EAAGJ,GAClDM,EAAQJ,GAAUE,EAAcJ,GAEpCf,EAAoB,IAAVqB,EAAcD,EAAQ,IAAMC,EAAQD,EAE9C,IAAIE,EAAgBjH,SAASC,eAAe,iBAAiBC,MAO7D,MANsB,MAAlB+G,IACAtB,EAAUoB,GAEQ,QAAlBE,GAA2BF,EAAQ,IACnCpB,EAAUA,EAAQZ,UAAU,EAAGY,EAAQpE,SAEpCoE,EAEX,SAASiB,GAAUhB,EAAYc,GAC3B,IAAIf,EAAU,GACVsB,EAAgBjH,SAASC,eAAe,iBAAiBC,MACvC,QAAlB+G,GAA2BA,EAAgB,IAC3CrB,GAA0B,GAER,MAAlBqB,IACArB,EAAa,GAGjB,IAAK,IAAItE,EAAI,EAAGA,EAAIsE,EAAYtE,IAC5BqE,GAAWe,EAAkBQ,OAAOtH,KAAKuH,MAAMvH,KAAKC,SAAW6G,EAAkBnF,SAErF,OAAOoE,EA1SU,8CAmTrB,sBAAAyB,EAAA,sEACsDC,UAAUC,UAAUC,WAD1E,OACIvH,SAASC,eAAe,YAAYC,MADxC,mDAnTqB,sBAsTrB,IAQMsH,GAAe,SAACtH,EAAOuH,GAEzB,OAAQA,GACJ,IAAK,kBACDhF,EAAmBvC,GACnB,MACJ,IAAK,aACDyC,EAAczC,GACd,MACJ,IAAK,gBACD2C,EAAiB3C,GACjB,MACJ,IAAK,YACD8C,EAAa9C,GACb,MACJ,IAAK,eACDgD,EAAehD,GACf,MACJ,IAAK,aACDkD,EAAalD,KAOzB,OACI,sBAAKb,UAAU,WAAf,UAEI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uCACA,0BAAUqI,GAAG,aACb,uBACA,sCACA,wBAAQC,KAAK,UAAUD,GAAG,UAA1B,SACI,wBAAQxH,MAAM,MAAd,mBAGJ,uBAAOgB,KAAK,OAAOhB,MAAO0C,EACtBgF,SAAU,SAACC,GACPL,GAAaK,EAAEC,OAAO5H,MAAO,oBAErC,uBAAOgB,KAAK,SAAShB,MAAM,QAAQwH,GAAG,gBAAgBK,QAAS,WAxD3E/H,SAASC,eAAe,YAAYC,MAAQ,MAyDhC,uBAAOgB,KAAK,SAAShB,MAAM,QAAQwH,GAAG,gBAAgBK,QAAS,kBA1W1D,2CA0WgEC,SAEzE,sBAAK3I,UAAU,eAAf,UACI,6FACA,uBAAO6B,KAAK,OAAOwG,GAAG,eAAexH,MAAO6C,EACxC6E,SAAU,SAACC,GACPL,GAAaK,EAAEC,OAAO5H,MAAO,gBAErC,uBACA,4DACA,uBAAOgB,KAAK,OAAOhB,MAAOsC,EACtBoF,SAAU,SAACC,GACPL,GAAaK,EAAEC,OAAO5H,MAAO,sBAErC,uBACA,+CACA,uBAAOgB,KAAK,SAAShB,MAAOwC,EACxBkF,SAAU,SAACC,GACPL,GAAaK,EAAEC,OAAO5H,MAAO,iBAErC,uBACA,8BACI,yBAAQyH,KAAK,gBAAgBD,GAAG,gBAAhC,UACI,wBAAQxH,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,OAAd,uBAGR,8BACI,yBAAQyH,KAAK,aAAaD,GAAG,aAA7B,UACI,wBAAQxH,MAAM,aAAd,wBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,WAAd,2BAGR,8BACI,yBAAQyH,KAAK,qBAAqBD,GAAG,qBAArC,UACI,wBAAQxH,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,gCAGR,yBAAQyH,KAAK,cAAcD,GAAG,cAA9B,UACI,wBAAQxH,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAEJ,uBAAOgB,KAAK,SAAShB,MAAM,MAAMwH,GAAG,aAAaK,QAAS,kBAxWxD,WACd,IAAIE,EAAmBjI,SAASkI,uBAAuB,oBACnD/C,EAAY,GAGhB,GAAgB,QAFFnF,SAASC,eAAe,WAAWC,MAE1B,CAEnB,IADA,IAAIiE,EAAaN,KACRvC,EAAI,EAAGA,GAAKoB,EAAYpB,IAC7B6D,GAAaC,GAAajB,GAAc,KAExC8D,EAAiB,GAAGE,QACpB9E,EAAU8B,GAEV9B,EAAUrC,EAAS,KAAOmE,IA2V0CiD,MAChE,uBACA,6CACA,8BACI,yBAAQT,KAAK,SAASD,GAAG,SAAzB,UACI,wBAAQxH,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,yBAGR,iDACA,uBAAOgB,KAAK,OAAOwG,GAAG,iBAEtB,uBACA,uBAAOxG,KAAK,SAAShB,MAAM,aAAawH,GAAG,gBAAgBK,QAAS,kBArV/D,WACjB,IAAIM,EAAerI,SAASC,eAAe,gBAAgBC,MACvD+H,EAAmBjI,SAASkI,uBAAuB,oBACnD/D,EAAaN,KAEbyE,EAAY,GAEhB,OAHatI,SAASC,eAAe,UAAUC,OAI3C,IAAK,SACDoI,EAAYpD,GAAmBf,GAC/BmE,GAAatE,GAA0BP,IACvC,IAAK,IAAInC,EAAI,EAAGA,EAAI6C,EAAW5C,OAAQD,IAC/BoD,GAAiBP,EAAW7C,MAC5BgH,GAAS,UAAOD,EAAP,MAGjBC,EAAYA,EAAUvD,UAAU,EAAGuD,EAAU/G,OAAS,GAAK,KAC3D,MACJ,IAAK,SACD,IAAIsD,EAAeD,GAAkBT,GACrCmE,EAAYtE,GA1EL,WA2EPsE,GAAapE,GAAaC,GAC1BmE,GAAatE,GA3ET,SA4EJ,IAAK,IAAI1C,EAAI,EAAGA,EAAIuD,EAAatD,OAAQD,IAErCgH,GADgBzD,EAAavD,GACH,MAAQ+G,EAClCC,GAAchH,IAAMuD,EAAatD,OAAS,EAAK,GAAK,KAExD+G,GAAatE,GAA0BN,IACvC,MACJ,IAAK,SACD4E,EAAYtE,GAlFA,gBAmFZsE,GAAapE,GAAaC,GAC1BmE,GAAatE,GAA0BN,IACvC,MACJ,IAAK,SACD,IAAI6E,EAAgB3D,GAAkBT,GACtCmE,EAAYtE,GAvFL,WAwFP,IAAK,IAAI1C,EAAI,EAAGA,EAAIiH,EAAchH,OAAQD,IAEtCgH,GADiBC,EAAcjH,GAE/BgH,GAAchH,IAAMiH,EAAchH,OAAS,EAAK,GAAK,KAEzD+G,GAAatE,GA5FR,UA6FLsE,GAAapE,GAAaC,GAC1BmE,GAAatE,GAA0BN,IAK3CuE,EAAiB,GAAGE,QACpB9E,EAAUiF,GAEVjF,EAAUrC,EAAS,KAAOsH,GAgSwDE,YAGlF,sBAAKC,MAAM,UAAX,gBACI,uBAAMA,MAAM,cAAZ,0DAAuE,uBAAM,uBAA7E,oEAA+I,uBAA/I,iJAEJ,sBAAKpJ,UAAU,SAAf,UACI,uBAAO6B,KAAK,SAAShB,MAAM,QAAQwH,GAAG,WAAWK,QAAS,kBApIlE1E,EAAU,SACVG,EAAa,IAAIF,QAoIT,uBAAOjE,UAAU,mBAAmB6B,KAAK,aACzC,uBAAOA,KAAK,SAAShB,MAAM,OAAOwH,GAAG,WAAWK,QAAS,WA5HjEV,UAAUC,UAAUoB,UAAU1H,MA6HtB,0CACA,uBAAOE,KAAK,OAAOhB,MAAO+C,EACtB2E,SAAU,SAACC,GACPL,GAAaK,EAAEC,OAAO5H,MAAO,mBAErC,sCACA,uBAAOgB,KAAK,OAAOhB,MAAOiD,EACtByE,SAAU,SAACC,GACPL,GAAaK,EAAEC,OAAO5H,MAAO,iBAErC,uBAAOgB,KAAK,SAAShB,MAAM,UAAUwH,GAAG,WAAWK,QAAS,WApI/DvD,IAAEa,QAAQpC,IAAiBuB,IAAEa,QAAQlC,IACtCE,EAAUrC,EAAOQ,WAAWyB,EAAaE,OAqIrC,0BAAUuE,GAAG,SAASxH,MAAOc,IAC7B,uBAAM,uBAAM,uBACZ,0BAAU0G,GAAG,eCtOdiB,EA7NK,WAChB,IAAMC,EAAW,KACXC,EAAS,IAETC,EAAQ,IAERC,EAAW,IAKXC,EAAe,CAAC,WAAY,QAAS,UACrCC,EAAe,CAAC,WAChBC,EAAa,CAAC,QAAS,aACvBC,EAAa,CAAC,OAAQ,SAEtBC,EAAiB,CAAC,KAAM,MAExBC,EAAa,IACbC,EAAa,IACbC,EAAW,IAIjB,EAAgChH,mBAAS,KAAzC,mBAAOiH,EAAP,KAAiBC,EAAjB,KACA,EAAoClH,mBAAS,IAA7C,mBAAOmH,EAAP,KAAmBC,EAAnB,KACA,EAAoCpH,mBAAS,GAA7C,mBAAOqH,EAAP,KAAmBC,EAAnB,KAEAlG,qBAAU,WACN3D,SAASC,eAAe,YAAY2D,YAAc,iCAEpD,IAEF,IAAMwE,EAAU,WAGZ,IAAI0B,EAAa,GAGjBA,GAIJ,SAAiB3F,GACb,IAAIuB,EAAgB8D,EAGhBM,EAAa,MACjBA,GAAcC,OAHWL,EAGyBb,EAApCkB,KAA2DnB,EACzE,IAAK,IAAIpD,EAAI,EAAGA,EAAIrB,EAAW5C,OAAQiE,IAAK,CACxC,IAAIG,EAAU,GACVhB,EAASR,EAAWqB,GAAGjB,OACvByF,EAAWC,EAAYtF,GAC3B,GAAIA,EAAOxD,SAASuE,GAAgB,CAChC,IAAIG,EAAU1B,EAAWqB,GAAGjB,OAC5BoB,EAAUE,EAAQd,UAAUc,EAAQb,QAAQU,GAAiB,EAAGG,EAAQC,YAAYJ,IAChFsE,IAAaV,GAAcU,IAAaT,IACxC5D,EAAUkD,EAASlD,EAAUkD,GAGjCmB,EArCa,IA0CbnJ,EAAU8D,EAAQyE,KAElBzE,GADAA,EAASA,EAAOI,UAAU,EAAGJ,EAAOK,QAAQ,OAC5BT,QAEpB,IAAIhD,EAAS,EAKb,GAHsB,KADtBA,EAASoD,EAAOI,UAAUJ,EAAOmB,YAAYiD,GAAY,EAAGpE,EAAOpD,QAAQgD,QAChEhD,SACPA,EAASqI,GAETjF,EAAOpD,OAAS,IAChBoD,EAASA,EAAOI,UAAUJ,EAAOmB,YAlE3B,KAkEqDnB,EAAOmB,YAAYiD,KACnExE,OAAOhD,OAAS,EAAG,CAE1B,IAAImF,EAAoB,iEAExBoD,GAAcC,UAAqBpF,EAAOJ,OAASsE,EAASC,EACxDkB,IAAaX,IACb3C,EAAoB,aAGpBsD,IAAaT,IACb5D,EAAUkD,EAAS/I,EAAWP,EAAW,IAAIG,KAAK,KAAM,EAAG,GAAI,IAAIA,OAAWmJ,GAE9EmB,IAAaV,GAAcU,IAAaX,IAExC1D,EAAUiB,EAAUrF,EAAQmF,EAAmBsD,IApElD,MAuEGA,IACArE,EAAU,gBAzEZ,MA4EEqE,IACArE,EAAU,SAGdmE,GAAcnE,EAAQpB,OAhGxB,IAgGyCqE,GASnD,OAHAkB,EAAaA,EAAW/E,UAAU,EAAG+E,EAAWvI,OAAS,GAAKqH,EAC9DkB,GAAcC,UArEAG,CAFClK,SAASC,eAAe,YAAYC,MACzB6D,MA9BJ,OA+Bc,KACpC/D,SAASC,eAAe,UAAUC,OAAS4J,GAyE/C,SAASG,EAAYtF,GACjB,OAAI9D,EAAU8D,EAAQqE,GACXK,EAEPxI,EAAU8D,EAAQsE,GACXK,EAEPzI,EAAU8D,EAAQuE,GACXK,EAEP1I,EAAU8D,EAAQwE,GArGT,IADC,IA4GlB,SAASvC,EAAUhB,EAAYc,EAAmBsD,GAE9C,IADA,IAAIrE,EAAU,GACLrE,EAAI,EAAGA,EAAIsE,EAAYtE,IAC5BqE,GAAWe,EAAkBQ,OAAOtH,KAAKuH,MAAMvH,KAAKC,SAAW6G,EAAkBnF,SAKrF,OAHIyI,IAAaV,IACb3D,EAAUkD,EAASlD,EAAUkD,GAE1BlD,EAzIW,4CAiJtB,sBAAAyB,EAAA,sEACsDC,UAAUC,UAAUC,WAD1E,OACIvH,SAASC,eAAe,YAAYC,MADxC,mDAjJsB,sBAoJtB,IAGMsH,EAAe,SAACtH,EAAOuH,GAEzB,OAAQA,GACJ,IAAK,aACDoC,EAAc3J,GACd,MACJ,IAAK,aACDyJ,EAAczJ,GACd,MACJ,IAAK,WACDuJ,EAAYvJ,KAMxB,OACJ,gCACA,sBAAKb,UAAU,eAAf,UACQ,sBAAKA,UAAU,cAAf,UAEI,0BAAUqI,GAAG,aACb,uBACA,uBAAOxG,KAAK,OAAOhB,MAAOsJ,EAAU5B,SAAU,SAACC,GAC3CL,EAAaK,EAAEC,OAAO5H,MAAO,eAEjC,uBAAOgB,KAAK,SAAShB,MAAM,QAAQ6H,QAAS,WAlChD/H,SAASC,eAAe,YAAYC,MAAQ,MAmCxC,uBAAOgB,KAAK,SAAShB,MAAM,QAAQ6H,QAAS,kBAlL9B,0CAkLoCC,SAEtD,sBAAK3I,UAAU,eAAf,UACA,sCACI,uBAAO6B,KAAK,OAAOhB,MAAOwJ,EAC1B9B,SAAU,SAACC,GACPL,EAAaK,EAAEC,OAAO5H,MAAO,iBAEjC,uBACA,gDACA,uBAAOgB,KAAK,OAAOhB,MAAO0J,EAAchC,SAAU,SAACC,GAC/CL,EAAaK,EAAEC,OAAO5H,MAAO,iBAEjC,uBACA,uBACA,yBAAQyH,KAAK,aAAaD,GAAG,aAA7B,UACI,wBAAQxH,MAAM,aAAd,wBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,WAAd,yBAEJ,uBACA,uBACA,uBAAOgB,KAAK,SAAShB,MAAM,MAAM6H,QAAS,kBAAMK,aAIxD,sBAAK/I,UAAU,SAAf,UACI,uBAAO6B,KAAK,SAAShB,MAAM,QAAQ6H,QAAS,WApE5C/H,SAASC,eAAe,UAAUC,MAAQ,MAqE1C,uBAAOgB,KAAK,SAAShB,MAAM,OAAO6H,QAAS,WA5D3CV,UAAUC,UAAUoB,UAAU1I,SAASC,eAAe,UAAUC,UA8DhE,0BAAUwH,GAAG,WACb,uBAAK,uBAAK,uBACV,0BAAUA,GAAG,eCjGNyC,EAnHQ,WAEnBxG,qBAAU,WAEN3D,SAASC,eAAe,SAAS2D,YAAc,MAC/C5D,SAASC,eAAe,cAAcC,MAAQ,IAC9CF,SAASC,eAAe,mBAAmBC,MAAQ,IACnCF,SAASC,eAAe,aAC9BmK,MAAMC,QAAU,SAC5B,IAEF,IAAItG,EAAQ,KAmCZ,SAASuG,EAAkBnG,EAAYoG,EAAOC,GAG1C,IAFA,IAAIC,EAAczK,SAASC,eAAe,cAAcC,MACpDwK,EAAiB1K,SAASC,eAAe,mBAAmBC,MACvDoB,EAAI,EAAGA,EAAI6C,EAAW5C,OAAQD,IACnC,GAAc,KAAViJ,EAAc,CAId,IAFA,IAAII,EAAUJ,EAAMxG,MAAM0G,GACtBG,EAAWzG,EAAW7C,GACjBqD,EAAS,EAAGA,EAASgG,EAAQpJ,OAAQoD,IAAU,CACpD,IAAIkG,EAAaF,EAAQhG,GAAQZ,MAAM2G,GACvCE,EAAWA,EAASpJ,WAAWqJ,EAAW,GAAIA,EAAW,IAE7DL,EAAOvF,KAAK2F,GAGpB,OAAOJ,EAgBf,OACI,gCACI,qBAAK/B,MAAM,eAAX,SACA,gCACI,sBAAKf,GAAG,cAAR,UACI,uBAAOxG,KAAK,QAAQwG,GAAG,SAASC,KAAK,YAAYzH,MAAM,OAAO6H,QAAS,kBAZ9D,WACjB,IAAI+C,EAAY9K,SAASC,eAAe,aACxBD,SAASC,eAAe,aAC9BmK,MAAMC,QAAU,QAC1BS,EAAUV,MAAMC,QAAU,OAQ2DU,MADjF,QAEI,uBAAO7J,KAAK,QAAQwG,GAAG,SAASC,KAAK,YAAYzH,MAAM,OAAOiI,QAAQ,UAAUJ,QAAS,kBApBjF,WAChB,IAAI+C,EAAY9K,SAASC,eAAe,aACxBD,SAASC,eAAe,aAC9BmK,MAAMC,QAAU,OAC1BS,EAAUV,MAAMC,QAAU,QAgB6EW,MAFnG,WAIA,uBAEA,uBACA,uBAAO9J,KAAK,OAAOwG,GAAG,eACtB,uBACA,uBAAOxG,KAAK,OAAOwG,GAAG,yBAG9B,sBAAKe,MAAM,kBAAX,UACI,sBAAKA,MAAM,cAAX,UACI,wCACA,uBAAOvH,KAAK,OAAO+J,OAAO,aAAatD,KAAK,YAAYD,GAAG,cAC3D,0BAAUA,GAAG,iBAEjB,sBAAKe,MAAM,eAAX,UACI,0CACA,0BAAUf,GAAG,UACb,6BAGR,uBACA,uBAAOxG,KAAK,SAASwG,GAAG,UAAUxH,MAAM,MAAM6H,QAAS,kBA7FtC,WAMb,IALA,IAAImD,EAAMlL,SAASmL,kBAAkB,aACjCX,EAAS,GACTY,EAAY,GACZb,EAAQvK,SAASC,eAAe,SAASC,MAEpCoB,EAAI,EAAGA,EAAI4J,EAAI3J,OAAQD,IACxB4J,EAAI5J,GAAG6G,UACPiD,EAAYF,EAAI5J,GAAGpB,OAE3B,GAAkB,SAAdkL,EAAsB,CACtB,IAAIC,EAAOrL,SAASC,eAAe,aAC/BqL,EAAK,IAAIC,WACbD,EAAGE,OAAS,WACR,IAAIrH,EAAasH,KAAKzK,OAAO+C,MAAMA,GACnCyG,EAASF,EAAkBnG,EAAYoG,EAAOC,IAElDc,EAAGI,UAAY,WACXC,QAAQC,IAAIpB,GACZxK,SAASC,eAAe,UAAU2D,YAAc4G,EAAOqB,KAAK9H,IAGhEuH,EAAGQ,WAAWT,EAAKU,MAAM,QACtB,CACH,IAEI5H,EAFYnE,SAASC,eAAe,aAAaC,MAE1B6D,MAAMA,GACjCyG,EAASF,EAAkBnG,EAAYoG,EAAOC,GAC9CxK,SAASC,eAAe,UAAU2D,YAAc4G,EAAOqB,KAAK9H,IAiEPqE,MAC7D,sBAAKK,MAAM,QAAX,UACI,wCACA,0BAAUf,GAAG,kBChBNsE,EA/FM,WACjBrI,qBAAU,WACN3D,SAASC,eAAe,YAAYC,MAAQ,MAC5CF,SAASC,eAAe,aAAaC,MAAQ,QAE9C,IAwCH,OACI,gCACI,wBAAQ+L,MAAM,0BAA0BC,MAAM,MAAMC,OAAO,MAAMzE,GAAG,UAAU0E,IAAI,KADtF,IAEc,uBACV,sBAAK1E,GAAG,UAAR,UACI,uBAAOxG,KAAK,OAAOwG,GAAG,gBAD1B,IAC2C,uBACvC,uBAAOxG,KAAK,SAAShB,MAAM,OAAOwH,GAAG,aAAaK,QAAS,kBA5CrD,WACd,IAAIsE,EAAcrM,SAASC,eAAe,eAAeC,MACrDoM,EAAMD,EAENC,EAD6B,IAA7BD,EAAYrH,QAAQ,KACd,iCAAmCqH,EAAYtH,UAAUsH,EAAYvG,YAAY,KAAO,EAAGuG,EAAY9K,QAAQgD,OAE/G+H,EAAIvH,UAAU,EAAGuH,EAAI/K,QAE/BvB,SAASC,eAAe,WAAWmM,IAAME,EAoCgClE,MACjE,uBACA,sBAAKK,MAAM,SAAX,UACI,sBAAKA,MAAM,cAAX,UACI,uCACA,uBAAOvH,KAAK,OAAOwG,GAAG,WAAWE,SAAU,SAACC,GAf3C,IAAC3H,IAgBe2H,EAAEC,OAAO5H,MAf1CF,SAASC,eAAe,aAAaC,MAAgB,GAARA,KAkB7B,wCACA,uBAAOgB,KAAK,OAAOwG,GAAG,cACtB,uBACA,uBAAOxG,KAAK,SAAShB,MAAM,SAASwH,GAAG,YAAYK,QAAS,kBA9C/D,WACb,IACIwE,EADWvM,SAASC,eAAe,YACVC,MACzBsM,EAAYxM,SAASC,eAAe,aAAaC,MACrDF,SAASC,eAAe,WAAWwM,aAAa,QAAhD,gBAAkEF,EAAlE,sBAA6FC,EAA7F,OA0CkFE,SAEtE,sBAAKjE,MAAM,eAAX,cAA2B,uBACvB,uBAAOvH,KAAK,SAAShB,MAAM,SAASwH,GAAG,eAAeK,QAAS,WA1C/E/H,SAASC,eAAe,WAAWwM,aAAa,QAAhD,+BA2CgB,uBAAOvL,KAAK,SAAShB,MAAM,QAAQwH,GAAG,WAAWK,QAAS,WAxC1E/H,SAASC,eAAe,WAAWwM,aAAa,QAAhD,8BAyCgB,uBAAOvL,KAAK,SAAShB,MAAM,WAAWwH,GAAG,YAAYK,QAAS,WAtC9E/H,SAASC,eAAe,WAAWwM,aAAa,QAAhD,iCAuCgB,uBAAOvL,KAAK,SAAShB,MAAM,OAAOwH,GAAG,SAASK,QAAS,WApCvE/H,SAASC,eAAe,WAAWwM,aAAa,QAAhD,gCAqCgB,uBAAM,uBACN,0BAAU/E,GAAG,eAGrB,uBAAOxG,KAAK,SAAShB,MAAM,IAAIwH,GAAG,UAAUK,QAAS,WAtC7D/H,SAASC,eAAe,WAAWmK,MAAMC,QAAU,aAwC/C,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBAAOnJ,KAAK,SAAShB,MAAM,IAAIwH,GAAG,UAAUK,QAAS,WAlDzD/H,SAASC,eAAe,WAAWmK,MAAMC,QAAU,e,gBC3C5C,GACbsC,OAAQ,CACNC,aAAc,kBAEhBC,OAAQ,CACND,aAAc,mBAEdE,OAAQ,0CACRC,SAAU,2EACVC,MAAO,wDACPC,cACE,CAAC,4DACHC,cAAe,gD,OCyFJC,EA9FI,SAACC,GAChB,MAAgC7K,mBAAS,IAAzC,mBAAO8K,EAAP,KAAiBC,EAAjB,KACA,EAA4B/K,mBAAS,IAArC,mBAAOgL,EAAP,KAAeC,EAAf,KACA,EAA8BjL,mBAAS,IAAvC,mBAAOkL,EAAP,KAAgBC,EAAhB,KACA,EAA8BnL,mBAAS,IAAvC,mBAAOoL,EAAP,KAAgBC,EAAhB,KACA,EAAgCrL,mBAAS,IAAzC,mBAAOsL,EAAP,KAAiBC,EAAjB,KACA,EAAsCvL,mBAAS,IAA/C,mBAAOwL,EAAP,KAAoBC,EAApB,KAEArK,qBAAU,WACNgI,QAAQC,IAAI,kBACb,IACHjI,qBAAU,WAENqK,EAAexJ,IAAEyJ,UAAUb,EAAMc,QACjCvC,QAAQC,IAAI,6BACb,CAACwB,EAAMc,QAEVvK,qBAAU,WACFyJ,EAAMe,gBACNC,IAEJzC,QAAQC,IAAI,sCAGb,CAACwB,EAAMe,iBAGV,IAAMC,EAAmB,WACrB,IAAK5J,IAAEa,QAAQ+H,EAAMc,OAAQ,CACzB,IAAIG,EAAO,KACPC,EAAU9J,IAAEa,QAAQ0I,GAAevJ,IAAEyJ,UAAUb,EAAMc,OAAS1J,IAAEyJ,UAAUF,GAC9E,GAAyB,WAArBX,EAAMmB,WAAyB,CAC/B,IAAIC,EAAQ5O,KAAKuH,MAAMvH,KAAKC,SAAWyO,EAAQ/M,QAE/C8M,EAAOC,EAAQE,GACfF,EAAQG,OAAOD,EAAO,QAGtBH,EAAOC,EAAQ,GACfA,EAAQI,QAEZV,EAAeM,GAEX9J,IAAEa,QAAQgJ,EAAKM,cACfrB,EAAYe,EAAKO,IAEjBtB,EAAYe,EAAKM,cAErBnB,EAAUa,EAAKQ,KACfjB,EAAW,MAKbkB,EAAU,WACZ,IAAIC,EAAM/O,SAASC,eAAe,UAAUC,MAC5C,IAAKsE,IAAEC,OAAOsK,KAASvK,IAAEC,OAAO8I,GAAS,CACrC,IAAIyB,EAAOzB,EAAO/L,WAAW,IAAK,IAC9BuN,EAAIxK,OAAO3C,gBAAkBoN,EAAKpN,cAAc2C,QAChD6J,IACAV,EAAW,YACX1N,SAASC,eAAe,UAAUC,MAAQ,GAC1C4N,EAAYP,IAEZG,EAAW,YAiBvB,OACI,sBAAKrO,UAAU,OAAf,UACI,8BAAMgO,IAAe,uBACrB,uBAAOnM,KAAK,OAAOwG,GAAG,SAASuH,UAAW,SAAApH,GAAC,OAhB7B,SAACA,GACL,UAAVA,EAAEqH,KACFJ,IAc+CK,CAActH,MAAM,uBACnE,qBAAKxI,UAAU,MAAf,SAAkC,WAAZoO,EAAuB,cAAC,IAAD,IAAiB,cAAC,IAAD,MAC9D,uBAAOpO,UAAU,YAAY6B,KAAK,SAAShB,MAAM,QAAQwH,GAAG,YAAYK,QAAS,kBAAM+G,OACvF,uBAAOzP,UAAU,YAAY6B,KAAK,SAAShB,MAAM,WAAWwH,GAAG,aAAaK,QAAS,WAbrFvD,IAAEa,QAAQsI,GACVC,EAAWL,GAEXK,EAAW,OAWX,gCAAMD,EAASnJ,IAAEa,QAAQsI,GAAW,wBAAc,cAAC,IAAD,CAAYtO,UAAU,YAAY0I,QAAS,kBAAMqF,EAAMgC,UAAUzB,GAAS,SAC5H,gCAAMnJ,IAAEa,QAAQwI,GAAY,wBAAc,0CAAaA,EAAS,cAAC,IAAD,CAAYxO,UAAU,YAAY0I,QAAS,kBAAMqF,EAAMgC,UAAUvB,GAAU,SAA3I,W,gBC0YGwB,EA5dI,WACf,IAGA,EAA0BC,6BAAmB,CACzCC,MAJU,eAGNC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAGf,EAA0BlN,mBAAS,IAAnC,mBAAO2L,EAAP,KAAcwB,EAAd,KACA,EAAsCnN,mBAAS,UAA/C,mBAAOoN,EAAP,KAAoBC,EAApB,KACA,EAA4CrN,oBAAS,GAArD,mBAAO4L,EAAP,KAAuB0B,EAAvB,KAEA,EAAoCtN,mBAAS,GAA7C,mBAAOuN,EAAP,KAAmBC,EAAnB,KACA,EAA0CxN,mBAAS,GAAnD,mBAAOyN,EAAP,KAAsBC,EAAtB,KACA,EAAwB1N,mBAAS,IAAjC,mBAAO2N,EAAP,KAAaC,EAAb,KACA,EAA0B5N,mBAAS,IAAnC,mBAAO6N,EAAP,KAAcC,EAAd,KACA,EAAsC9N,mBAAS,IAA/C,mBAAO+N,EAAP,KAAoBC,EAApB,KACA,EAAsChO,mBAAS,IAA/C,mBAAOiO,EAAP,KAAoBC,EAApB,KACA,EAAsClO,mBAAS,IAA/C,mBAAOmO,EAAP,KAAoBC,EAApB,KACA,EAAkCpO,mBAAS,IAA3C,oBAAOqO,GAAP,MAAkBC,GAAlB,MACA,GAA6BC,YAAW,CAAC,mBAAzC,qBAAOC,GAAP,MAAgBC,GAAhB,MAEA,GAA4BzO,oBAAS,GAArC,qBAAO0O,GAAP,MAAeC,GAAf,MACA,GAAoC3O,oBAAU,GAA9C,qBAAO4O,GAAP,MAAmBC,GAAnB,MACA,GAAsC7O,mBAAS,GAA/C,qBAAO8O,GAAP,MAAoBC,GAApB,MASMC,GAAuB,aACvBC,GAAqB,WACrBC,GAAoB,UACpBC,GAAwB,cACxBC,GAA2B,iBAC3BC,GAAwB,iBACxBC,GAAoB,UACpBC,GAAqB,WAM3BnO,qBAAU,WACN3D,SAASC,eAAe,aAAaC,MAAQ,KAC7CF,SAASC,eAAe,YAAYmK,MAAMC,QAAU,OACpDrK,SAASC,eAAe,WAAWmK,MAAMC,QAAU,QACnDrK,SAASC,eAAe,kBAAkBmK,MAAMC,QAAU,QAC1D0H,KAEIvN,IAAEa,QAAQ0L,KACVJ,EAAeI,GAAQiB,kBAE5B,IACHrO,qBAAU,WACN8L,EAAOxO,SAAQ,SAACgR,EAAQzD,GAGpByD,EAAOC,KAAK/Q,SAAS,UACjB8O,EAAiBzB,GAIrByD,EAAOC,KAAK/Q,SAAS,UACjB4O,EAAcvB,QAGvB,CAACiB,IAEJ9L,qBAAU,WACNgI,QAAQC,IAAI,2BACZ,IAAIuG,EAAYnS,SAASC,eAAe,aAAaC,MAC7C+Q,IACAG,GAAcgB,YAAW,WACrBC,KACJf,GAAeD,GAAY,KACf,IAAZc,MAEL,CAACd,KAER1N,qBAAU,WACNoO,KACApG,QAAQC,IAAI,uBACb,CAACwE,IAGJzM,qBAAU,WACN2O,KACA3G,QAAQC,IAAI,uBACb,CAACsC,IAEJvK,qBAAU,WACN,IAAI4O,EAAU,IAAI7S,KAClB6S,EAAQC,QAAQD,EAAQE,UAAW,KACpCzB,GAAU,iBAAiBN,EAAa,CAAEgC,KAAM,IAAMH,YACtD5G,QAAQC,IAAI,yBACXD,QAAQC,IAAI8E,GACZ/E,QAAQC,IAAImF,MACb,CAACL,IAGJ,IAAMqB,GAAmB,WACrBY,IAAKC,KAAK,eAAgBC,KAKxBP,GAAc,WAChB,IAAIQ,EAAU,GACd,IAAKtO,IAAEa,QAAQ6I,GAAQ,CACnB,IAAI6E,EAAoBvO,IAAEa,QAAQqL,GAAc,GAAIA,EAAY3M,MAAM,KAAKsC,IAAIC,QAC/E,IAAK9B,IAAEa,QAAQ0N,IAAsBA,EAAkBxR,OAAS,EAAG,CAC/DwR,EAAkBC,MAAK,SAAC5L,EAAG6L,GAAJ,OAAUA,EAAI7L,KACrC,IAAI8L,EAAS1O,IAAEyJ,UAAUC,GACzB6E,EAAkB9R,SAAQ,SAAAkS,GACrBD,EAASzE,OAAO0E,EAAK,MAEzBtC,GAAaqC,QAEdrC,GAAarM,IAAEyJ,UAAUC,IAE7B,IAAK,IAAI5M,EAAI,EAAGA,EAAI4M,EAAM3M,OAAQD,IAAK,CACnC,IAAI+M,EAAOH,EAAM5M,GACb8R,EAAU/E,EAAKO,GACdpK,IAAEa,QAAQgJ,EAAKM,gBAChByE,EAAU/E,EAAKM,eAEdnK,IAAEa,QAAQgJ,EAAKQ,MAAQR,EAAKQ,IAAItN,OAAS,IACtCiD,IAAEa,QAAQ+N,GACVN,EAAQ7N,KAAKoJ,EAAKQ,KAElBiE,EAAQ7N,KAAKoJ,EAAKQ,IAALR,MAAoC+E,KAMjE,IADA,IAAIC,EAAY,GACP7N,EAAI,EAAGA,EAAIsN,EAAQvR,OAAQiE,IAC5BhB,IAAEa,QAAQyN,EAAQtN,MAClB6N,GAAaP,EAAQtN,GACrB6N,GAAa,MAIrBrT,SAASC,eAAe,YAAYC,MAAQmT,GAI1CR,GAAa,WAEf,IAAIS,EAASlD,EACbuC,IAAKY,OAAOC,KAAK,CACb1G,OAAQ2G,EAAO3G,OACfC,SAAU0G,EAAO1G,SACjBE,cAAewG,EAAOxG,cACtBD,MAAOyG,EAAOzG,QAEb0G,MAAK,YC1KE,SAACC,EAAUvD,GAC/BwD,OAAOjB,KAAKY,OAAOX,KAAK,SAAU,MAAM,WACtCgB,OAAOjB,KAAKY,OAAOM,OAAOC,aAAaC,OACpC/N,IAAI,CACHkH,cAAeuG,EAAOvG,cACtB8G,MAAOxP,IAAEa,QAAQ+K,GAAQqD,EAAO9G,OAAOC,aAAawD,IAErDsD,MACC,SAAAO,GACE,IAAMC,EAAOD,EAASjT,OAAO+S,OAC7BpI,QAAQC,IAAIsI,GACZ,IAAMhG,EAAQgG,EAAKC,QAAO,SAAA9F,GAAI,OAAK7J,IAAEa,QAAQgJ,MAC5ChI,KAAI,SAAAgI,GAAI,MAAK,CACZQ,IAAKR,EAAK,GACVO,GAAIP,EAAK,GACTM,aAAcN,EAAK,QACd,GACPsF,EAAS,CACPzF,aAGJ,SAAA+F,GACEN,GAAS,EAAOM,EAASjT,OAAOoT,aDqJxBxB,CAAKyB,GAAQf,OAKnBe,GAAS,SAACH,EAAME,GAClB,GAAIF,EAAM,CACN,IAAMlT,EAASkT,EAAKhG,MAChBoG,EAAM,GAEVtT,EAAOC,SAAQ,SAAAoN,GACN7J,IAAEa,QAAQgJ,IAAU7J,IAAEa,QAAQgJ,EAAKQ,MACpCyF,EAAIrP,KAAKoJ,MAIjBqB,EAAS4E,GACT3I,QAAQC,IAAI0I,QAEZ3I,QAAQC,IAAIwI,IAKd/B,GAAW,WACb1G,QAAQC,IAAI,YACR,IAAI9K,EAAO,KAIX,GAAmB,WAFFd,SAASC,eAAe,aAAaC,MAEzB,CACzB,IAAIsO,EAAQ5O,KAAKuH,MAAMvH,KAAKC,SAAW+Q,GAAUrP,QACjDT,EAAO8P,GAAUpC,GACjBoC,GAAUnC,OAAOD,EAAO,QAExB1N,EAAO8P,GAAU,GACjBA,GAAUlC,QAEd/C,QAAQC,IAAI8E,GACZ,IAAI6D,EAAWrG,EAAMsG,WAAU,SAAAC,GAAC,OAAIA,EAAE5F,MAAQ/N,EAAK+N,OACnDlD,QAAQC,IAAI,GAAI8E,GAAelM,IAAEa,QAAQqL,GAAe6D,EAASG,WAAa,IAAMH,EAASG,aAC7F,IAAMC,EAAQnQ,IAAEa,QAAQqL,GAAe6D,EAASG,WAAavO,OAAOuK,GAAe,IAAM6D,EAASG,WAClG/D,EAAegE,GACXnQ,IAAEa,QAAQuL,MACVC,GAAarM,IAAEyJ,UAAUC,IACzByC,EAAe,KAGnBiE,GAAU9T,IAKZ8T,GAAY,SAAC9T,GAEf,GADA6K,QAAQC,IAAI9K,GACP8S,OAAOiB,aAIR,GAAgC,YAA5BA,aAAaC,WAA0B,CAEvC,IAAIC,EAAU/U,SAASC,eAAe,gBAAgBC,MACtD,IAAKsE,IAAEa,QAAQvE,GAAO,CAClB,IAAIkU,EAASlU,EAAK+N,IACdoG,EAAQnU,EAAK8N,GAqBjB,GApBKpK,IAAEa,QAAQvE,EAAK6N,gBAChBsG,EAAQnU,EAAK6N,cAEjB4B,EAAeyE,GACfvE,EAAewE,IAIXzQ,IAAE0Q,QAAQH,EAASxD,KAAyB/M,IAAE0Q,QAAQH,EAAStD,KAC5DjN,IAAE0Q,QAAQH,EAASrD,KAA0BlN,IAAE0Q,QAAQH,EAASpD,KAChEnN,IAAE0Q,QAAQH,EAASnD,KAA0BpN,IAAE0Q,QAAQH,EAASlD,MAEnEzC,GAAU4F,GAAQ,IAGlBxQ,IAAE0Q,QAAQH,EAASxD,KAAyB/M,IAAE0Q,QAAQH,EAAStD,KAC5DjN,IAAE0Q,QAAQH,EAASnD,MAEtBxC,GAAU6F,GAAO,GAEjBzQ,IAAE0Q,QAAQH,EAASnD,KAA0BpN,IAAE0Q,QAAQH,EAASlD,KAC7DrN,IAAE0Q,QAAQH,EAASjD,IACH,IAAI+C,aAAaG,GAGxC,GAAIxQ,IAAE0Q,QAAQH,EAASxD,KAAyB/M,IAAE0Q,QAAQH,EAASvD,KAC5DhN,IAAE0Q,QAAQH,EAASrD,IAEH,IAAImD,aADVG,EAAO,IAAIC,SAOhCJ,aAAaM,oBAAoBzB,MAAK,SAAU0B,GAClC,YAANA,GAGAzJ,QAAQC,IAAI,kCAEjByJ,OAAM,SAAUC,GACf3J,QAAQyI,MAAMkB,WAlDtB3J,QAAQC,IAAI,4CAgHd2J,GAAiB,WAEQ,UADhBvV,SAASC,eAAe,kBAC1BmK,MAAMC,QACXrK,SAASC,eAAe,kBAAkBmK,MAAMC,QAAU,OAE1DrK,SAASC,eAAe,kBAAkBmK,MAAMC,QAAU,SAI5D+E,GAAY,SAACoG,EAAUC,GAEzB,IAAIC,EAAS1V,SAASC,eAAe,SAASC,MAC1CyV,EAAY3V,SAASC,eAAe,YAAYC,MAChD0V,EAAQ5V,SAASC,eAAe,QAAQC,MAExC2V,EAAY,IAAIjC,OAAOkC,yBAE3BD,EAAUE,KAAOP,EAEjBK,EAAU3F,KAAO0F,EAGbC,EAAUG,MADVP,EACkBhG,EAAOiG,GAEPjG,EAAOkG,GAE7BE,EAAUI,OAAS,EACnBzG,EAAMqG,IAMV,OACI,gCACI,sBAAKnO,GAAG,iBAAR,UACI,sBAAKrI,UAAU,oBAAoBqI,GAAG,UAAtC,UACI,sBAAKrI,UAAU,cAAf,UACI,0BAAU4M,MAAM,IAAIvE,GAAG,aACvB,oCAAO4I,EAAP,MAAuBE,EAAahM,IAAEa,QAAQiL,GAAe,wBAAc,cAAC,IAAD,CAAYjR,UAAU,YAAY0I,QAAS,kBAAMqH,GAAUkB,GAAa,SAAgB,0BAEvK,sBAAKjR,UAAU,4BAAf,UACI,yBAAQA,UAAU,YAAYsI,KAAK,QAAQD,GAAG,UAAUE,SAAU,SAACC,GAC/DwI,EAASxI,EAAEC,OAAO5H,QADtB,UAGI,wBAAQA,MAAM,iBAAd,oBACA,wBAAQA,MAAM,iBAAd,oBACA,wBAAQA,MAAM,iBAAd,oBACA,wBAAQA,MAAM,oBAAd,uBACA,wBAAQA,MAAM,oBAAd,uBACA,wBAAQA,MAAM,oBAAd,0BAGJ,yBAAQb,UAAU,YAAYsI,KAAK,UAAUD,GAAG,YAAYE,SAAU,SAACC,GApErE,IAAC3H,IAqEe2H,EAAEC,OAAO5H,MApE3C0P,EAAe1P,IAmEC,UAGI,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAEJ,yBAAQb,UAAU,YAAYsI,KAAK,aAAaD,GAAG,eAAeE,SAAU,SAACC,GArEtE,IAAC3H,IAsEe2H,EAAEC,OAAO5H,MApE5CsE,IAAE0Q,QAAQhV,EAAOsR,IACjBxR,SAASC,eAAe,iBAAiBmK,MAAMC,QAAU,OAEzDrK,SAASC,eAAe,iBAAiBmK,MAAMC,QAAU,SAgE7C,UAGI,wBAAQnK,MAAO2R,GAAf,oCACA,wBAAQ3R,MAAO0R,GAAf,gCACA,wBAAQ1R,MAAOqR,GAAf,4BACA,wBAAQrR,MAAOsR,GAAf,oBACA,wBAAQtR,MAAOuR,GAAf,mBACA,wBAAQvR,MAAOwR,GAAf,gCACA,wBAAQxR,MAAOyR,GAAf,uBACA,wBAAQzR,MAAO4R,GAAf,yBAGJ,sBAAKpK,GAAG,gBAAR,UACI,2CACA,yBAAQrI,UAAU,YACdqI,GAAG,QACHC,KAAK,QACLzH,MAAO4P,GAAc,GACrBlI,SAAU,SAACsO,GACPnG,EAAcmG,EAAMpO,OAAO5H,QALnC,UAQI,wBAAQA,MAAM,GAAd,qBACCuP,EAAOpJ,KAAI,SAAC4L,EAAQzD,GAAT,OACR,wBAA8BtO,MAAOsO,EAArC,mBACQyD,EAAOC,KADf,cACyBD,EAAOtK,OADnBsK,EAAOkE,gBAK5B,sBAAK/L,MAvYG,CAC5BC,QAAS,OACT+L,cAAe,SACfC,aAAc,IAoYM,UACI,sBAAKjM,MAzYZ,CAAEC,QAAS,OAAQ+L,cAAe,OAyY3B,UACI,uBAAOE,QAAQ,OAAf,qBACA,qBAAKjX,UAAU,aAAf,SAA6B6Q,OAEjC,uBACIhP,KAAK,QACLqV,IAAI,MACJ/P,IAAI,IACJgQ,aAAa,MACbC,KAAK,MACL/O,GAAG,OACHE,SAAU,SAACsO,GACP/F,EAAQ+F,EAAMpO,OAAO5H,aAIjC,2CACA,yBAAQb,UAAU,YACdqI,GAAG,WACHC,KAAK,WACLzH,MAAO8P,GAAiB,GACxBpI,SAAU,SAACsO,GACPjG,EAAiBiG,EAAMpO,OAAO5H,QALtC,UAQI,wBAAQA,MAAM,GAAd,qBACCuP,EAAOpJ,KAAI,SAAC4L,EAAQzD,GAAT,OACR,wBAA8BtO,MAAOsO,EAArC,mBACQyD,EAAOC,KADf,cACyBD,EAAOtK,OADnBsK,EAAOkE,yBASxC,sBAAK9W,UAAU,iBAAf,UACI,uBAAOA,UAAU,YAAY6B,KAAK,SAAShB,MAAM,QAAQwH,GAAG,WAAWK,QAAS,WAjLzFkJ,KACCC,IAAU,GACVmB,KACAf,GAAeD,GAAY,OA+KnB,wBAAQhS,UAAU,YAAYqI,GAAG,UAAUK,QAAS,kBAtLhEmJ,IAAU,QACVwF,cAAcvF,KAqLF,kBACA,uBAAO9R,UAAU,YAAY6B,KAAK,OAAOwG,GAAG,cAC5C,uBAAOrI,UAAU,YAAY6B,KAAK,SAAShB,MAAM,OAAOwH,GAAG,UAAUK,QAAS,WA1K/D,UADhB/H,SAASC,eAAe,WAC1BmK,MAAMC,QAEXrK,SAASC,eAAe,WAAWmK,MAAMC,QAAU,OAEnDrK,SAASC,eAAe,WAAWmK,MAAMC,QAAU,WAuK3C,uBAAOhL,UAAU,YAAY6B,KAAK,SAAShB,MAAM,WAAWwH,GAAG,WAAWK,QAAS,kBAjK/E,WAChB,IAAI4O,EAAO3W,SAASC,eAAe,YACnC4P,GAAkB,GAES,UAAvB8G,EAAKvM,MAAMC,QAEXrK,SAASC,eAAe,YAAYmK,MAAMC,QAAU,QAEpDrK,SAASC,eAAe,YAAYmK,MAAMC,QAAU,QACpDkL,MAwJiGqB,MACzF,uBAAOvX,UAAU,YAAY6B,KAAK,SAASwG,GAAG,WAAWxH,MAAQ+Q,GAla3D,MADD,OAmaqG,6BAGlH,0BAAUvJ,GAAG,cAAcxH,MAASwQ,EAAa9I,SA1G9B,SAAAC,GACvB8I,EAAgB9I,EAAEC,OAAO5H,UA2GrB,qBAAKwH,GAAG,WAAR,SACI,cAAC,EAAD,CAAYwG,MAAOA,EAAOK,WAAYoB,EAClCP,UAAWA,GACXjB,eAAgBA,MAExB,qBAAKzG,GAAG,kBAAkBK,QAAS,kBAAMwN,MAAzC,SAA4D,cAAC,IAAD,UEhNzDsB,EA1QK,WAChB,IAMMC,EAAY,KAElB,EAAgCvU,mBAAS,IAAzC,mBAAO8K,EAAP,KAAiBC,EAAjB,KACA,EAA4B/K,mBAAS,IAArC,mBAAOgL,EAAP,KAAeC,EAAf,KACA,EAA8BjL,mBAAS,IAAvC,mBAAOkL,EAAP,KAAgBC,EAAhB,KACA,EAA8BnL,mBAAS,IAAvC,mBAAOoL,EAAP,KAAgBC,EAAhB,KAEA,EAA0BrL,mBAAS,IAAnC,mBAAO2L,EAAP,KAAcwB,EAAd,KACA,EAAoCnN,mBAAS,IAA7C,mBAAOwU,EAAP,KAAmBC,EAAnB,KACA,EAA0BzU,mBAASkR,EAAO5G,OAAOD,cAAjD,mBAAOwD,EAAP,KACA,GADA,KACoC7N,mBAAS,IAA7C,mBAAOuN,EAAP,KAAmBC,EAAnB,KACA,EAAoCxN,qBAApC,mBAAO0U,EAAP,KAAmBC,EAAnB,KACA,EAA8B3U,mBAAS,IAAvC,mBAAO4U,EAAP,KAAgBC,EAAhB,KACA,EAAsC7U,mBAAS,IAA/C,mBAAO8U,EAAP,KAAoBC,EAApB,KACA,EAAwB/U,mBAAS,IAAjC,mBAAO2N,GAAP,KAAaC,GAAb,KACA,GAAgC5N,mBAAS,IAAzC,qBAAOsL,GAAP,MAAiBC,GAAjB,MAKA,GAA0BwB,6BAAmB,CACzCC,MAJU,eAGNC,GAAR,GAAQA,MAAOC,GAAf,GAAeA,OAKf9L,qBAAU,WACNgI,QAAQC,IAAI,gBACZmG,OAED,IACHpO,qBAAU,WACN,GAAIa,IAAE0Q,QAAQ+B,EAAYH,GAAY,CAClC,IAAIS,EAAUJ,EAAQhD,QAAO,SAAA9F,GACzB,OAAOA,EAAKQ,MAAQxB,KAEpBiH,EAAM6C,EAAQhD,QAAO,SAAA9F,GACrB,OAAOA,EAAKmJ,YAAcD,EAAQ,GAAGC,aAEzCF,EAAehD,QAEfgD,EAAeH,KAEpB,CAAC9J,IAEJ1J,qBAAU,WACNyK,OACD,CAAC+I,IACJxT,qBAAU,WACN,IAAIa,IAAEa,QAAQ6I,GAAd,CAGA,IAAIuJ,GAAa,EACbC,EAAe,GACnBxJ,EAAMjN,SAAQ,SAACoN,GACN7J,IAAEa,QAAQgJ,EAAKmJ,YAAcnJ,EAAKmJ,YAAcC,IACjDC,EAAazS,KAAKoJ,GAClBoJ,EAAYpJ,EAAKmJ,cAIzBR,EAAcU,GACdR,EAAcJ,MACf,CAAC5I,IACJvK,qBAAU,WACN8L,GAAOxO,SAAQ,SAACgR,EAAQzD,GAGhByD,EAAOC,KAAK/Q,SAAS,UACrB4O,EAAcvB,QAGvB,CAACiB,KAEJ9L,qBAAU,WACDa,IAAEa,QAAQkI,IACXuB,OAEL,CAACvB,IAEJ5J,qBAAU,WAEN,IAAIgU,EAAa,GACbV,IAAeH,EAGfa,EAAazJ,EAEbA,EAAMjN,SAAQ,SAAAoN,GACNA,EAAKmJ,YAAcP,GACnBU,EAAW1S,KAAKoJ,MAI5B+I,EAAWO,KAEZ,CAACV,IAEJ,IAAMlF,GAAmB,WACrBY,IAAKC,KAAK,eAAgBC,KAIxBA,GAAa,WAEf,IAAIS,EAASlD,EACbuC,IAAKY,OAAOC,KAAK,CACb1G,OAAQ2G,EAAO3G,OACfC,SAAU0G,EAAO1G,SACjBE,cAAewG,EAAOxG,cACtBD,MAAOyG,EAAOzG,QAEb0G,MAAK,YDjGa,SAACC,EAAUvD,GAC1CwD,OAAOjB,KAAKY,OAAOX,KAAK,SAAU,MAAM,WACtCgB,OAAOjB,KAAKY,OAAOM,OAAOC,aAAaC,OACpC/N,IAAI,CACHkH,cAAeuG,EAAOvG,cACtB8G,MAAOxP,IAAEa,QAAQ+K,GAAQqD,EAAO9G,OAAOC,aAAawD,IAErDsD,MACC,SAAAO,GACE,IAAMC,EAAOD,EAASjT,OAAO+S,OAC7BpI,QAAQC,IAAIsI,GACZ,IAAMhG,EAAQgG,EAAKC,QAAO,SAAA9F,GAAI,OAAK7J,IAAEa,QAAQgJ,MAC5ChI,KAAI,SAAAgI,GAAI,MAAK,CACZQ,IAAKR,EAAK,GACVO,GAAIP,EAAK,GACTmJ,UAAWnJ,EAAK,QACX,GACPsF,EAAS,CACPzF,aAGJ,SAAA+F,GACEN,GAAS,EAAOM,EAASjT,OAAOoT,aC4ExBwD,CAAgBvD,GAAQf,OAK9Be,GAAS,SAACH,EAAME,GAClB,GAAIF,EAAM,CACN,IAAMlT,EAASkT,EAAKhG,MAChBoG,EAAM,GAEVtT,EAAOC,SAAQ,SAAAoN,GACN7J,IAAEa,QAAQgJ,IAAU7J,IAAEa,QAAQgJ,EAAKQ,MACpCyF,EAAIrP,KAAKoJ,MAIjBqB,EAAS4E,GACT3I,QAAQC,IAAI0I,QAEZ3I,QAAQC,IAAIwI,IAMdhG,GAAmB,WACrB,IAAK5J,IAAEa,QAAQ8R,GAAU,CACrB,IAAIpI,EAAMoI,EAASvX,KAAKC,SAAWsX,EAAQ5V,OAAU,GACrD+L,EAAYyB,EAAIF,KAChBO,GAAUL,EAAIF,KAAK,GACnBjB,EAAW,IACXJ,EAAU,MAGZsB,GAAU,WACPtK,IAAEC,OAAO8I,KACNA,EAAOhJ,OAAO3C,gBAAkByL,EAASzL,cAAc2C,QACvD6J,KACAV,EAAW,YACX1N,SAASC,eAAe,UAAUC,MAAQ,GAC1C4N,GAAYP,IAEZG,EAAW,YAYjB0B,GAAY,SAACoG,EAAUC,GACzB,IAAIC,EAAS1V,SAASC,eAAe,SAASC,MAC1C0V,EAAQ5V,SAASC,eAAe,QAAQC,MACxC2V,EAAY,IAAIjC,OAAOkC,yBAE3BD,EAAUE,KAAOP,EAEjBK,EAAU3F,KAAO0F,EACbH,IACAI,EAAUG,MAAQvG,GAAOiG,IAE7BG,EAAUI,OAAS,EACnBzG,GAAMqG,IAUV,OACI,sBAAKxW,UAAU,OAAf,UACI,sBAAKA,UAAU,GAAf,UACI,yBAAQA,UAAU,YAAYsI,KAAK,aAAaC,SAAU,SAACC,GACvDqP,EAAcrP,EAAEC,OAAO5H,QAD3B,UAGI,wBAAQA,MAAO4W,EAAf,sBACCC,EAAW1Q,KAAI,SAACgI,GAAD,OACZ,wBAAQnO,MAAOmO,EAAKmJ,UAApB,mBACQnJ,EAAKQ,MADuBR,EAAKQ,WAKjD,yBAAQxP,UAAU,mBACdqI,GAAG,QACHC,KAAK,QACLzH,MAAO4P,GAAc,GACrBlI,SAAU,SAACsO,GACPnG,EAAcmG,EAAMpO,OAAO5H,QALnC,UAQI,wBAAQA,MAAM,GAAd,qBACCuP,GAAOpJ,KAAI,SAAC4L,EAAQzD,GAAT,OACR,wBAA8BtO,MAAOsO,EAArC,mBACQyD,EAAOC,KADf,cACyBD,EAAOtK,OADnBsK,EAAOkE,gBAK5B,sBAAK/L,MA7Ne,CAC5BC,QAAS,OACT+L,cAAe,SACfC,aAAc,IA0NN,UACI,sBAAKjM,MA/NA,CAAEC,QAAS,OAAQ+L,cAAe,OA+NvC,UACI,uBAAOE,QAAQ,OAAf,qBACA,qBAAKjX,UAAU,aAAf,SAA6B6Q,QAEjC,uBACIhP,KAAK,QACLqV,IAAI,MACJ/P,IAAI,IACJgQ,aAAa,MACbC,KAAK,MACL/O,GAAG,OACHE,SAAU,SAACsO,GACP/F,GAAQ+F,EAAMpO,OAAO5H,aAIjC,8BAAMsE,IAAEa,QAAQgI,GAAY,wBAAc,cAAC,IAAD,CAAYhO,UAAU,YAAY0I,QAAS,kBAAMqH,GAAU/B,GAAU,WAEnH,uBAAOnM,KAAK,OAAOwG,GAAG,SAASuH,UAAW,SAAApH,GAAC,OAvD7B,SAACA,GACL,UAAVA,EAAEqH,KACF1B,EAAU3F,EAAEC,OAAO5H,OAqD4BiP,CAActH,MAC7D,uBACA,yBAAQxI,UAAU,YAAYqI,GAAG,YAAYE,SAAU,SAACC,IApD9C,SAACA,GACf2F,EAAU3F,EAAEC,OAAO5H,OAoDX2X,CAAUhQ,IAEV3H,MAAOqN,GAAU,GAHrB,cAIE,wBAAQrN,MAAM,GAAd,oBACGmX,EAAYhR,KAAI,SAACgI,GAAD,OACb,wBAAQnO,MAAOmO,EAAKQ,IAApB,mBACQR,EAAKQ,MADiBR,EAAKQ,WAK3C,uBACA,qBAAKxP,UAAU,MAAf,SAAkC,WAAZoO,EAAuB,cAAC,IAAD,IAAiB,cAAC,IAAD,MAC7DA,EAAQ,uBACT,uBAAOpO,UAAU,YAAY6B,KAAK,SAAShB,MAAM,QAAQwH,GAAG,YAAYK,QAAS,kBAAM+G,QACvF,uBAAOzP,UAAU,YAAY6B,KAAK,SAAShB,MAAM,WAAWwH,GAAG,aAAaK,QAAS,WA5FrFvD,IAAEa,QAAQsI,GACVC,EAAWP,GAEXO,EAAW,OA0FX,8BAAMD,IACN,gCAAMnJ,IAAEa,QAAQwI,IAAY,wBAAc,0CAAaA,GAAS,cAAC,IAAD,CAAYxO,UAAU,YAAY0I,QAAS,kBAAMqH,GAAUvB,IAAU,SAArI,WCnQGiK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtE,MAAK,YAAkD,IAA/CuE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCMdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,eAAC,IAAD,WACD,8BAAK,cAAC,IAAD,CAAMlZ,GAAG,IAAT,SAAa,cAAC,IAAD,QAClB,uBACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmZ,OAAK,EAAC/F,KAAK,IAAIgG,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOhG,KAAK,OAAOgG,QAAS,cAAC,EAAD,MAC5B,cAAC,IAAD,CAAOhG,KAAK,QAAQgG,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOhG,KAAK,WAAWgG,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOhG,KAAK,SAASgG,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOhG,KAAK,UAAUgG,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOhG,KAAK,UAAUgG,QAAS,cAAC,EAAD,cAMtC1Y,SAASC,eAAe,SAM1B6X,M","file":"static/js/main.bd450155.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <div>\r\n       \r\n     <Link to=\"/sql\">sql</Link>\r\n     <Link to=\"/json\">json</Link>\r\n     <Link to=\"/replace\">replace</Link>\r\n     <Link to=\"/media\">media</Link>\r\n     <Link to=\"/notify\">notify</Link>\r\n     <Link to=\"/listen\">listenPrac</Link>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import _ from 'lodash';\r\n\r\nexport const randomDate=(start, end)=> {\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n}\r\nexport const formatDate=(date)=> {\r\n    var formatDate = document.getElementById(\"formatDate\").value;\r\n    const d = new Date(date)\r\n    const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n    const mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(d);\r\n    const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n    switch(formatDate){\r\n        case 'yyyy-mm-dd':\r\n            return `${ye}-${mo}-${da}`;\r\n        case 'yyyy/mm/dd':\r\n            return `${ye}/${mo}/${da}`;\r\n        case 'yyyymmdd':\r\n            return `${ye}${mo}${da}`;\r\n        case 'dd-mm-yyyy':\r\n            return `${da}-${mo}-${ye}`;\r\n        case 'dd/mm/yyyy':\r\n            return `${da}/${mo}/${ye}`;\r\n        case 'ddmmyyyy':\r\n            return `${da}${mo}${ye}`;\r\n         default:\r\n                break;\r\n    }\r\n    return `${ye}${formatDate}${mo}${formatDate}${da}`;\r\n}\r\nexport const checkType=(line, arrayType) =>{\r\n    var result = false;\r\n    arrayType.forEach(type=>{\r\n        if (line.includes(type)) {\r\n            result=true;\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexport const replaceArr =(line, arrayType, valRpl) => {\r\n    for(let i=0; i<arrayType.length; i++){\r\n       var type = arrayType[i];\r\n        line = line.replaceAll(`${type}`, valRpl);\r\n    }\r\n\r\n    return line;\r\n}\r\nexport const checkIncludesArr =(line, arrayStr, sensitive) => {\r\n    if(!sensitive){\r\n        line= line.toUpperCase();\r\n    }\r\n    for(let i=0; i<arrayStr.length; i++){\r\n       var  str= arrayStr[i];\r\n       if(line.includes(str)){\r\n        return true;\r\n       }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport const randomList =(arr) => {\r\n    if(!_.isEmpty(arr)){\r\n        var item = arr[Math.floor(Math.random()*arr.length)];\r\n        return item;\r\n    }\r\n\r\n    return \"\";\r\n}","// this file is converted from javascript to reactjs so some code is not optimized\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../common/style.css';\r\nimport { checkType, replaceArr, randomDate, formatDate, checkIncludesArr } from \"../common/common.js\";\r\nimport _ from 'lodash';\r\n\r\nconst SqlProcess = () => {\r\n    // const NEW_LINE = '\\n';\r\n    const SPLIT_LINE_INPUT_FIELD = '^';\r\n    const INDENT_BEGIN_FIELD_LENGTH = '(';\r\n    const INDENT_FIELD_LENGTH_END = ')';\r\n    const INDENT_COMMA = ',';\r\n    const INDENT_SPACE = ' ';\r\n    const DATA_NULL = 'NULL';\r\n    const CREATE_TABLE = 'CREATE TABLE';\r\n\r\n    const ARR_NOT_FIELDNAME = ['PRIMARY ', CREATE_TABLE + ' ', 'ENGINE=', 'ENGINE =', 'CHARSET =', 'CHARSET='];\r\n    const INDENT_FIELD_NAME = ['\"', '`', `'`];\r\n\r\n    const NUMBER_TYPE = [' NUMBER', ' NUMERIC', ' LONG', ' INT', ' INTEGER', ' TINYINT', ' BIGINT', ' DECIMAL'\r\n    , ' FLOAT', ' REAL', ' SMALLMONEY', ' MONEY', ' SMALLINT'];\r\n    const DATE_TYPE = [' DATE', ' TIMESTAMP', ' DATETIME', ' TIME', ' SMALLDATETIME', ' DATETIME2', ' DATETIMEOFFSET '];\r\n    const NOT_NULL = ['NOT NULL'];\r\n\r\n    const [defaultValueInt, setDefaultValueInt] = useState(3);\r\n    const [lineNumber, setLineNumber] = useState(1);\r\n    const [dataCharFixed, setDataCharFixed] = useState('|');\r\n    const [dataCharUnique, setDataCharUnique] = useState('*');//for changeable on screen\r\n    const [tableName, setTableName] = useState('');\r\n    const [replaceFrom, setReplaceFrom] = useState('');\r\n    const [replaceTo, setReplaceTo] = useState('');\r\n    const [result, setResult] = useState('');\r\n\r\n    const [uniqueMap, setUniqueMap] = useState(new Map());\r\n\r\n    const STR_INSERT_INTO = 'INSERT INTO ';\r\n    const STR_VALUE = ') VALUES (';\r\n    const STR_UPDATE = 'UPDATE ';\r\n    const STR_SET = ' SET ';\r\n    const STR_WHERE = ' WHERE ';\r\n    const STR_DELETE_FROM = 'DELETE FROM ';\r\n    const STR_SELECT = 'SELECT ';\r\n    const STR_FROM = ' FROM ';\r\n\r\n    useEffect(() => {\r\n        document.getElementById('txtField').textContent = '\"FFSFD\" NUMBER(3,0|fgfgfgd|),';\r\n        document.getElementById('dataTemplate').value = '?';\r\n\r\n    }, []);\r\n\r\n    const getListLineField = () => {\r\n\r\n        var txtField = document.getElementById('txtField').value;\r\n        txtField = txtField.replaceAll('\\n', SPLIT_LINE_INPUT_FIELD)\r\n        var lineInputs = txtField.split(SPLIT_LINE_INPUT_FIELD);\r\n        return lineInputs;\r\n    }\r\n    const onProcess = () => {\r\n        var chkDeleteOldData = document.getElementsByClassName('chkDeleteOldData');\r\n        var sqlResult = '';\r\n        var cmbType = document.getElementById(\"cmbType\").value;\r\n\r\n        if (cmbType === 'ddl') {\r\n            var lineInputs = getListLineField();\r\n            for (var i = 1; i <= lineNumber; i++) {\r\n                sqlResult += genDataInput(lineInputs) + '\\n';\r\n            }\r\n            if (chkDeleteOldData[0].checked) {\r\n                setResult(sqlResult);\r\n            } else {\r\n                setResult(result + '\\n' + sqlResult);\r\n            }\r\n        }\r\n    }\r\n    const getStrWithUpperCaseOption = (str) => {\r\n        var cmbTypeChar = document.getElementById(\"cmbTypeChar\").value;\r\n        return ((cmbTypeChar === 'upper') ? str : str.toLowerCase());\r\n    }\r\n    const getTableName = (lineInputs) => {\r\n        var formatFieldName = document.getElementById('cmbformatFeildName').value;\r\n        var tableNameDefault = null;\r\n        //getname\r\n        if (checkIncludesArr(lineInputs[0], [CREATE_TABLE,], false)) {\r\n            var arrayRepl = [CREATE_TABLE, '('];\r\n            tableNameDefault = replaceArr(lineInputs[0], arrayRepl, '').trim();\r\n            if (formatFieldName === 'delete') {\r\n                tableNameDefault = replaceArr(tableNameDefault, INDENT_FIELD_NAME, '');\r\n            }\r\n        }\r\n        return ((_.isNull(tableName) || tableName.length === 0) ? tableNameDefault : tableName);\r\n    }\r\n    const onGenCodeSql = () => {\r\n        var dataTemplate = document.getElementById('dataTemplate').value;\r\n        var chkDeleteOldData = document.getElementsByClassName('chkDeleteOldData');\r\n        var lineInputs = getListLineField();\r\n        var cmbSql = document.getElementById(\"cmbSql\").value;\r\n        var resultStr = '';\r\n\r\n        switch (cmbSql) {\r\n            case 'insert':\r\n                resultStr = genFieldNameInsert(lineInputs);\r\n                resultStr += getStrWithUpperCaseOption(STR_VALUE);\r\n                for (let i = 0; i < lineInputs.length; i++) {\r\n                    if (checkLineIsField(lineInputs[i])) {\r\n                        resultStr += `${dataTemplate},`;\r\n                    }\r\n                }\r\n                resultStr = resultStr.substring(0, resultStr.length - 1) + ');';\r\n                break;\r\n            case 'update':\r\n                var arrFieldName = getArrayFieldName(lineInputs);\r\n                resultStr = getStrWithUpperCaseOption(STR_UPDATE);\r\n                resultStr += getTableName(lineInputs);\r\n                resultStr += getStrWithUpperCaseOption(STR_SET);\r\n                for (let i = 0; i < arrFieldName.length; i++) {\r\n                    var fieldName = arrFieldName[i];\r\n                    resultStr += (fieldName + ' = ' + dataTemplate);\r\n                    resultStr += (i === arrFieldName.length - 1) ? '' : ', ';\r\n                }\r\n                resultStr += getStrWithUpperCaseOption(STR_WHERE);\r\n                break;\r\n            case 'delete':\r\n                resultStr = getStrWithUpperCaseOption(STR_DELETE_FROM);\r\n                resultStr += getTableName(lineInputs);\r\n                resultStr += getStrWithUpperCaseOption(STR_WHERE);\r\n                break;\r\n            case 'select':\r\n                var arrFieldNameS = getArrayFieldName(lineInputs);\r\n                resultStr = getStrWithUpperCaseOption(STR_SELECT);\r\n                for (let i = 0; i < arrFieldNameS.length; i++) {\r\n                    var fieldNameS = arrFieldNameS[i];\r\n                    resultStr += fieldNameS;\r\n                    resultStr += (i === arrFieldNameS.length - 1) ? '' : ', ';\r\n                }\r\n                resultStr += getStrWithUpperCaseOption(STR_FROM);\r\n                resultStr += getTableName(lineInputs);\r\n                resultStr += getStrWithUpperCaseOption(STR_WHERE);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (chkDeleteOldData[0].checked) {\r\n            setResult(resultStr);\r\n        } else {\r\n            setResult(result + '\\n' + resultStr);\r\n        }\r\n    }\r\n\r\n    const checkLineIsField = (trLine) => {\r\n        if (trLine.trim().length === 0 || checkIncludesArr(trLine, ARR_NOT_FIELDNAME, false)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const getArrayFieldName = (lineInputs) => {\r\n        var formatFieldName = document.getElementById('cmbformatFeildName').value;\r\n        var arrFieldName = [];\r\n        for (var i = 0; i < lineInputs.length; i++) {\r\n            var trLine = lineInputs[i].trim();\r\n            if (checkLineIsField(trLine)) {\r\n                var fieldName = trLine.substring(0, trLine.indexOf(INDENT_SPACE));\r\n                if (formatFieldName === 'delete') {\r\n                    fieldName = replaceArr(fieldName, INDENT_FIELD_NAME, '');\r\n                }\r\n                arrFieldName.push(fieldName.trim());\r\n            }\r\n        }\r\n        return arrFieldName;\r\n    }\r\n    const genFieldNameInsert = (lineInputs) => {\r\n        // var flagComa = false;\r\n        var sqlResult = getStrWithUpperCaseOption(STR_INSERT_INTO) + getTableName(lineInputs) + '(';\r\n        var arrFieldName = getArrayFieldName(lineInputs);\r\n        for (var i = 0; i < arrFieldName.length; i++) {\r\n            var fieldName = arrFieldName[i].trim();\r\n            sqlResult += fieldName;\r\n            sqlResult += (i === arrFieldName.length - 1) ? '' : ', ';\r\n        }\r\n        return sqlResult;\r\n    }\r\n\r\n    function genDataInput(lineInputs) {\r\n        if (_.isEmpty(lineInputs)) {\r\n            return;\r\n        }\r\n        var cmbTypeChar = document.getElementById(\"cmbTypeChar\").value;\r\n        var sqlResult = genFieldNameInsert(lineInputs);\r\n\r\n        sqlResult += ((cmbTypeChar === 'upper') ? STR_VALUE : STR_VALUE.toLowerCase());\r\n        var flagComa = false;\r\n        for (var j = 0; j < lineInputs.length; j++) {\r\n            var trLine = lineInputs[j].trim().toUpperCase();\r\n            var typeNumber = false;\r\n            // var notNull = false;\r\n            if (checkLineIsField(trLine)) {\r\n\r\n                var indentComData = dataCharFixed;\r\n                var dataStr = '';\r\n                var lengthData = 0;\r\n                if (trLine.includes(indentComData)) {\r\n                    var orgLine = lineInputs[j].trim();\r\n                    dataStr = orgLine.substring(orgLine.indexOf(indentComData) + 1, orgLine.lastIndexOf(indentComData));\r\n                } else if (trLine.includes(dataCharUnique)) {\r\n                    let fieldName = trLine.substring(0, trLine.indexOf(INDENT_SPACE));\r\n                    let strValueField = \"\";\r\n                    strValueField = uniqueMap.get(fieldName);\r\n                    if (_.isEmpty(strValueField)) {\r\n                        let intValue = trLine.substring(trLine.indexOf(dataCharUnique) + 1, trLine.lastIndexOf(dataCharUnique));\r\n                        setUniqueMap(uniqueMap.set(fieldName, String(intValue)));\r\n                        dataStr = String(intValue);\r\n                    } else {\r\n                        let arrValue = strValueField.split(',');\r\n                        let arrValueInt = arrValue.map(Number);\r\n                        let maxvalue = Math.max.apply(Math, arrValueInt) + 1;\r\n\r\n                        setUniqueMap(uniqueMap.set(fieldName, strValueField + ',' + (maxvalue)));\r\n                        dataStr = String(maxvalue);\r\n                    }\r\n                 if (!checkType(trLine, NUMBER_TYPE)) {\r\n                    dataStr = 'a'+dataStr;\r\n                 }\r\n                } else {\r\n                    if (checkType(trLine, NOT_NULL)) {\r\n                        // notNull = true;\r\n                        trLine = replaceArr(trLine, NOT_NULL, '');\r\n                    }\r\n                    trLine = trLine.trim();\r\n                    if (trLine.substring(trLine.length - 1, trLine.length) !== INDENT_COMMA) {\r\n                        trLine = trLine + INDENT_COMMA;\r\n                    }\r\n                    var randomTemplateStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n                    if (checkType(trLine, NUMBER_TYPE)) {\r\n                        randomTemplateStr = '123456789';\r\n                        typeNumber = true;\r\n                        lengthData = defaultValueInt;\r\n                    }\r\n                    if (checkType(trLine, DATE_TYPE)) {\r\n                        dataStr = formatDate(randomDate(new Date(2012, 0, 1), new Date()));\r\n                    } else {\r\n                        if (trLine.split(\",\").length - 1 === 2) {\r\n                            dataStr = genNuberWComman(trLine, randomTemplateStr);\r\n                        } else {\r\n\r\n                            if (lengthData === 0) {\r\n                                trLine = trLine.trim();\r\n                                lengthData = trLine.substring(trLine.lastIndexOf(INDENT_BEGIN_FIELD_LENGTH) + 1, trLine.indexOf(INDENT_FIELD_LENGTH_END));\r\n                            }\r\n                            dataStr = randomStr(lengthData, randomTemplateStr);\r\n                        }\r\n                    }\r\n                    var numOfCharater = document.getElementById(\"numOfCharater\").value;\r\n                    if (numOfCharater === DATA_NULL) {\r\n                        dataStr = DATA_NULL;\r\n                    }\r\n\r\n                }\r\n                if (flagComa === true) {\r\n                    sqlResult += ', ';\r\n                }\r\n                flagComa = true\r\n                if (dataStr.toUpperCase() === DATA_NULL) {\r\n                    typeNumber = true;\r\n                }\r\n                sqlResult += typeNumber ? dataStr : '\\'' + dataStr + '\\'';\r\n\r\n            }\r\n\r\n        }\r\n        sqlResult += ');';\r\n\r\n        return sqlResult;\r\n    }\r\n\r\n    function genNuberWComman(trLine, randomTemplateStr) {\r\n        var dataStr = '';\r\n        var firstNumber = trLine.substring(trLine.lastIndexOf(INDENT_BEGIN_FIELD_LENGTH) + 1, trLine.indexOf(INDENT_COMMA));\r\n        var secondNumber = trLine.substring(trLine.indexOf(INDENT_COMMA) + 1, trLine.indexOf(INDENT_FIELD_LENGTH_END));\r\n        var data1 = randomStr(firstNumber - secondNumber - 1, randomTemplateStr);\r\n        var data2 = randomStr(secondNumber, randomTemplateStr);\r\n\r\n        dataStr = data2 !== 0 ? data1 + '.' + data2 : data1;\r\n\r\n        var numOfCharater = document.getElementById(\"numOfCharater\").value;\r\n        if (numOfCharater === '1') {\r\n            dataStr = data1;\r\n        }\r\n        if (numOfCharater === 'mid' && data1 > 1) {\r\n            dataStr = dataStr.substring(1, dataStr.length);\r\n        }\r\n        return dataStr;\r\n    }\r\n    function randomStr(lengthData, randomTemplateStr) {\r\n        var dataStr = '';\r\n        var numOfCharater = document.getElementById(\"numOfCharater\").value;\r\n        if (numOfCharater === 'mid' && numOfCharater > 1) {\r\n            lengthData = lengthData / 2;\r\n        }\r\n        if (numOfCharater === '1') {\r\n            lengthData = 1;\r\n        }\r\n\r\n        for (var i = 0; i < lengthData; i++) {\r\n            dataStr += randomTemplateStr.charAt(Math.floor(Math.random() * randomTemplateStr.length));\r\n        }\r\n        return dataStr;\r\n    }\r\n    const onClearOuput = () => {\r\n        setResult('');\r\n        setUniqueMap(new Map());\r\n    };\r\n    const onClearField = () => {\r\n        document.getElementById('txtField').value = '';\r\n    };\r\n    async function pasteData() {\r\n        document.getElementById('txtField').value = await navigator.clipboard.readText();\r\n    };\r\n    const onCoppyOutput = () => {\r\n        navigator.clipboard.writeText(result);\r\n    };\r\n    const replace = () => {\r\n        if (!_.isEmpty(replaceFrom) && !_.isEmpty(replaceTo)) {\r\n            setResult(result.replaceAll(replaceFrom, replaceTo))\r\n        }\r\n    };\r\n    const handleChange = (value, typeName) => {\r\n\r\n        switch (typeName) {\r\n            case 'defaultValueInt':\r\n                setDefaultValueInt(value);\r\n                break;\r\n            case 'lineNumber':\r\n                setLineNumber(value);\r\n                break;\r\n            case 'dataCharFixed':\r\n                setDataCharFixed(value);\r\n                break;\r\n            case 'tableName':\r\n                setTableName(value);\r\n                break;\r\n            case 'replace-from':\r\n                setReplaceFrom(value);\r\n                break;\r\n            case 'replace-to':\r\n                setReplaceTo(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sql-body\">\r\n\r\n            <div className='option block' >\r\n                <div className='option-left'>\r\n                    <b>Field:</b>\r\n                    <textarea id='txtField'></textarea>\r\n                    <br />\r\n                    <b>type:</b>\r\n                    <select name=\"cmbType\" id=\"cmbType\">\r\n                        <option value=\"ddl\">ddl</option>\r\n                        {/* <!-- <option value=\"excel\">excel</option> --> */}\r\n                    </select>\r\n                    <input type=\"text\" value={dataCharFixed}\r\n                        onChange={(e) => {\r\n                            handleChange(e.target.value, \"dataCharFixed\")\r\n                        }} />\r\n                    <input type='submit' value=\"Clear\" id='btnCleanField' onClick={() => onClearField()} />\r\n                    <input type='submit' value=\"Paste\" id='btnPasteField' onClick={() => pasteData()} />\r\n                </div>\r\n                <div className='option-right'>\r\n                    <div>Table Name(leave it empty If have CREATE TABLE statement):</div>\r\n                    <input type=\"text\" id=\"txtTableName\" value={tableName}\r\n                        onChange={(e) => {\r\n                            handleChange(e.target.value, \"tableName\")\r\n                        }} />\r\n                    <br />\r\n                    <div>Default value Int lenght:</div>\r\n                    <input type=\"text\" value={defaultValueInt}\r\n                        onChange={(e) => {\r\n                            handleChange(e.target.value, \"defaultValueInt\")\r\n                        }} />\r\n                    <br />\r\n                    <div>Line number:</div>\r\n                    <input type='number' value={lineNumber}\r\n                        onChange={(e) => {\r\n                            handleChange(e.target.value, \"lineNumber\")\r\n                        }} />\r\n                    <br />\r\n                    <div>\r\n                        <select name=\"numOfCharater\" id=\"numOfCharater\">\r\n                            <option value=\"max\">max</option>\r\n                            <option value=\"mid\">mid</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"NULL\">NULL</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <select name=\"formatDate\" id=\"formatDate\">\r\n                            <option value=\"yyyy-mm-dd\">yyyy-mm-dd</option>\r\n                            <option value=\"yyyy/mm/dd\">yyyy/mm/dd</option>\r\n                            <option value=\"yyyymmdd\">yyyymmdd</option>\r\n                            <option value=\"dd-mm-yyyy\">dd-mm-yyyy</option>\r\n                            <option value=\"dd/mm/yyyy\">dd/mm/yyyy</option>\r\n                            <option value=\"ddmmyyyy\">ddmmyyyy</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <select name=\"cmbformatFeildName\" id=\"cmbformatFeildName\">\r\n                            <option value=\"none\">none</option>\r\n                            <option value=\"delete\">Delete format</option>\r\n                        </select>\r\n                    </div>\r\n                    <select name=\"cmbTypeChar\" id=\"cmbTypeChar\">\r\n                        <option value=\"upper\">Upper</option>\r\n                        <option value=\"lower\">Lower</option>\r\n                    </select>\r\n                    <input type='submit' value=\"exc\" id='btnExecute' onClick={() => onProcess()} />\r\n                    <br />\r\n                    <div>----------</div>\r\n                    <div>\r\n                        <select name=\"cmbSql\" id=\"cmbSql\">\r\n                            <option value=\"insert\">insert</option>\r\n                            <option value=\"update\">update</option>\r\n                            <option value=\"delete\">delete</option>\r\n                            <option value=\"select\">select</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>Data template:</div>\r\n                    <input type=\"text\" id='dataTemplate' />\r\n\r\n                    <br />\r\n                    <input type='submit' value=\"genCodeSql\" id='btnGenCodeSql' onClick={() => onGenCodeSql()} />\r\n                </div>\r\n            </div>\r\n            <div class=\"tooltip\">???\r\n                <span class=\"tooltiptext\">Coppy full character DLL and paste into Field<br /><br /> | - data set cứng. VD: \"COL\" NUMBER(3,0|abc|) - data =abc ,<br /> * -unique gia tri tự tăng. VD: \"FFSFD\" NUMBER(3,0*2*) , inititial value =2. Clear textbox để reset gia tri ban dau </span>\r\n            </div>\r\n            <div className='block '>\r\n                <input type='submit' value=\"Clear\" id='btnClean' onClick={() => onClearOuput()} />\r\n                <input className='chkDeleteOldData' type='checkbox' />\r\n                <input type='submit' value=\"Copy\" id='btnCoppy' onClick={() => onCoppyOutput()} />\r\n                <div>Replace</div>\r\n                <input type='text' value={replaceFrom}\r\n                    onChange={(e) => {\r\n                        handleChange(e.target.value, \"replace-from\")\r\n                    }} />\r\n                <div> to</div>\r\n                <input type='text' value={replaceTo}\r\n                    onChange={(e) => {\r\n                        handleChange(e.target.value, \"replace-to\")\r\n                    }} />\r\n                <input type='submit' value=\"replace\" id='btnCoppy' onClick={() => replace()} />\r\n                {/* <!-- <p>result:</p> --> */}\r\n                <textarea id='output' value={result}></textarea>\r\n                <br /><br /><br />\r\n                <textarea id='tmp'></textarea>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SqlProcess;","// this file is converted from javascript to reactjs so some code is not optimized\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../common/style.css';\r\nimport {checkType,  randomDate, formatDate} from \"../common/common.js\";\r\n\r\nconst JsonProcess = () => {\r\n    const NEW_LINE = '\\n';\r\n    const QUOTES = '\\\"';\r\n    const TAB = '   ';\r\n    const COLON = ':';\r\n    const COMMA = ',';\r\n    const END_LINE = ';';\r\n\r\n    var splitLineInputField = '\\n';\r\n    var indentSpace = ' ';\r\n\r\n    const NUMBER_TYPES = ['Integer ', 'Long ', 'Float '];\r\n    const STRING_TYPES = ['String '];\r\n    const DATE_TYPES = ['Date ', 'Timestamp'];\r\n    const LIST_TYPES = ['List', 'Array'];\r\n\r\n    const COMMENT_INDENT = ['//', '/*'];\r\n\r\n    const NUMBER_IND = '1';\r\n    const STRING_IND = '2';\r\n    const DATE_IND = '3';\r\n    const OTHER_IND = '4';\r\n    const LIST_IND = '5';\r\n    const ALREADY_HAS_DATA = '6';\r\n    const [dataChar, setDataChar] = useState('|');\r\n    const [masterName, setMasterName] = useState('');\r\n    const [dataLength, setDataLength] = useState(1);\r\n\r\n    useEffect(() => {\r\n        document.getElementById('txtField').textContent = 'private Integer inputPsnCd;4';\r\n\r\n    },[]);\r\n\r\n    const onProcess=()=>{\r\n    // executeBtn.addEventListener('click', () => {\r\n\r\n        var jsonResult = '';\r\n        var txtField = document.getElementById('txtField').value;\r\n        var lineInputs = txtField.split(splitLineInputField);\r\n        jsonResult += genData(lineInputs) + '\\n';\r\n        document.getElementById('output').value += jsonResult;\r\n    };\r\n\r\n    function genData(lineInputs) {\r\n        var indentComData = dataChar;\r\n        var txtMainElementName = masterName;\r\n\r\n        var jsonResult = '{' + NEW_LINE;\r\n        jsonResult += TAB + QUOTES + txtMainElementName + QUOTES + COLON + '{' + NEW_LINE;\r\n        for (var j = 0; j < lineInputs.length; j++) {\r\n            var dataStr = '';\r\n            var trLine = lineInputs[j].trim();\r\n            var typeData = getTypeData(trLine);\r\n            if (trLine.includes(indentComData)) {\r\n                var orgLine = lineInputs[j].trim();\r\n                dataStr = orgLine.substring(orgLine.indexOf(indentComData) + 1, orgLine.lastIndexOf(indentComData));\r\n                if (typeData === STRING_IND || typeData === DATE_IND) {\r\n                    dataStr = QUOTES + dataStr + QUOTES;\r\n                }\r\n\r\n                typeData = ALREADY_HAS_DATA;\r\n            }\r\n\r\n\r\n\r\n            if (checkType(trLine, COMMENT_INDENT)) {\r\n                trLine = trLine.substring(0, trLine.indexOf('/'));\r\n                trLine = trLine.trim();\r\n            }\r\n            var length = 0;\r\n            length = trLine.substring(trLine.lastIndexOf(END_LINE) + 1, trLine.length).trim();\r\n            if (length.length === 0) {\r\n                length = dataLength;\r\n            }\r\n            if (trLine.length > 0) {\r\n                trLine = trLine.substring(trLine.lastIndexOf(indentSpace), trLine.lastIndexOf(END_LINE));\r\n                if (trLine.trim().length > 0) {\r\n\r\n                    var randomTemplateStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n                    jsonResult += TAB + TAB + QUOTES + trLine.trim() + QUOTES + COLON\r\n                    if (typeData === NUMBER_IND) {\r\n                        randomTemplateStr = '123456789';\r\n                    }\r\n\r\n                    if (typeData === DATE_IND) {\r\n                        dataStr = QUOTES + formatDate(randomDate(new Date(2012, 0, 1), new Date())) + QUOTES;\r\n                    }\r\n                    if (typeData === STRING_IND || typeData === NUMBER_IND) {\r\n\r\n                        dataStr = randomStr(length, randomTemplateStr, typeData);\r\n                    }\r\n\r\n                    if (typeData === LIST_IND) {\r\n                        dataStr = '[' + NEW_LINE + NEW_LINE + TAB + TAB + ']';\r\n                    }\r\n\r\n                    if (typeData === OTHER_IND) {\r\n                        dataStr = 'OTHER'\r\n                    }\r\n\r\n                    jsonResult += dataStr.trim() + COMMA + NEW_LINE;\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        jsonResult = jsonResult.substring(0, jsonResult.length - 2) + NEW_LINE;\r\n        jsonResult += TAB + '}' + NEW_LINE + '}';\r\n\r\n        return jsonResult;\r\n    }\r\n\r\n    function getTypeData(trLine) {\r\n        if (checkType(trLine, NUMBER_TYPES)) {\r\n            return NUMBER_IND;\r\n        }\r\n        if (checkType(trLine, STRING_TYPES)) {\r\n            return STRING_IND;\r\n        }\r\n        if (checkType(trLine, DATE_TYPES)) {\r\n            return DATE_IND;\r\n        }\r\n        if (checkType(trLine, LIST_TYPES)) {\r\n            return LIST_IND;\r\n        }\r\n        return OTHER_IND;\r\n\r\n    }\r\n    function randomStr(lengthData, randomTemplateStr, typeData) {\r\n        var dataStr = '';\r\n        for (var i = 0; i < lengthData; i++) {\r\n            dataStr += randomTemplateStr.charAt(Math.floor(Math.random() * randomTemplateStr.length));\r\n        }\r\n        if (typeData === STRING_IND) {\r\n            dataStr = QUOTES + dataStr + QUOTES;\r\n        }\r\n        return dataStr;\r\n    }\r\n    const onClearOuput = () =>{\r\n        document.getElementById('output').value = '';\r\n    };\r\n    const onClearField = () =>{\r\n        document.getElementById('txtField').value = '';\r\n    };\r\n    async function pasteData() {\r\n        document.getElementById('txtField').value = await navigator.clipboard.readText();\r\n    }\r\n    const onCoppyOutput = () =>{\r\n        navigator.clipboard.writeText(document.getElementById('output').value);\r\n    };\r\n    const handleChange = (value, typeName) => {\r\n\r\n        switch (typeName) {\r\n            case 'dataLength':\r\n                setDataLength(value);\r\n                break;\r\n            case 'masterName':\r\n                setMasterName(value);\r\n                break;\r\n            case 'dataChar':\r\n                setDataChar(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n<div>\r\n<div className='option block'>\r\n        <div className='option-left'>\r\n            {/* <!-- <b>Field:</b> --> */}\r\n            <textarea id='txtField'></textarea>\r\n            <br/>\r\n            <input type=\"text\" value={dataChar} onChange={(e) => {\r\n                handleChange(e.target.value, \"dataChar\")\r\n            }} />\r\n            <input type='submit' value=\"Clear\" onClick={() => onClearField()}/>\r\n            <input type='submit' value=\"Paste\" onClick={() => pasteData()}/>\r\n        </div>\r\n        <div className='option-right'>\r\n        <p>Name:</p> \r\n            <input type=\"text\" value={masterName} \r\n            onChange={(e) => {\r\n                handleChange(e.target.value, \"masterName\")\r\n            }} />\r\n            <br/>\r\n            <p>Default Length:</p> \r\n            <input type=\"text\" value={dataLength}   onChange={(e) => {\r\n                handleChange(e.target.value, \"dataLength\")\r\n            }} />\r\n            <br/>\r\n            <br/>\r\n            <select name=\"formatDate\" id=\"formatDate\">\r\n                <option value=\"yyyy-mm-dd\">yyyy-mm-dd</option>\r\n                <option value=\"yyyy/mm/dd\">yyyy/mm/dd</option>\r\n                <option value=\"yyyymmdd\">yyyymmdd</option>\r\n                <option value=\"dd-mm-yyyy\">dd-mm-yyyy</option>\r\n                <option value=\"dd/mm/yyyy\">dd/mm/yyyy</option>\r\n                <option value=\"ddmmyyyy\">ddmmyyyy</option>\r\n            </select>\r\n            <br/>\r\n            <br/>\r\n            <input type='submit' value=\"exc\" onClick={() => onProcess()}/>\r\n        </div>\r\n    </div>\r\n\r\n    <div className='block '>\r\n        <input type='submit' value=\"Clear\" onClick={() => onClearOuput()}/>\r\n        <input type='submit' value=\"Copy\" onClick={() => onCoppyOutput()}/>\r\n        {/* <!-- <p>result:</p> --> */}\r\n        <textarea id='output'></textarea>\r\n        <br/><br/><br/>\r\n        <textarea id='tmp'></textarea>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n    )\r\n}\r\nexport default JsonProcess;","// this file is converted from javascript to reactjs so some code is not optimized\r\n//state is not used in this file\r\nimport React, { useEffect } from \"react\";\r\nimport '../common/style.css';\r\nimport _ from 'lodash';\r\n\r\nconst ReplaceProcess = () => {\r\n\r\n    useEffect(() => {\r\n\r\n        document.getElementById('regex').textContent = 'a^g';\r\n        document.getElementById('splitRegex').value = '`';\r\n        document.getElementById('splitChildRegex').value = '^';\r\n        var inputfile = document.getElementById('inputfile');\r\n        inputfile.style.display = \"none\";\r\n    },[]);\r\n    \r\n    var split = '\\n';\r\n\r\n    const onProcess =()=>{\r\n        var ele = document.getElementsByName('typeInput');\r\n        var txtArr = [];\r\n        var typeInput = '';\r\n        var regex = document.getElementById('regex').value;\r\n\r\n        for (let i = 0; i < ele.length; i++) {\r\n            if (ele[i].checked)\r\n                typeInput = ele[i].value;\r\n        }\r\n        if (typeInput === 'file') {\r\n            var file = document.getElementById('inputfile');\r\n            var fr = new FileReader();\r\n            fr.onload = function () {\r\n                var lineInputs = this.result.split(split);\r\n                txtArr = processingReplace(lineInputs, regex, txtArr);\r\n            }\r\n            fr.onloadend = function () {\r\n                console.log(txtArr);\r\n                document.getElementById('output').textContent = txtArr.join(split);\r\n            }\r\n\r\n            fr.readAsText(file.files[0]);\r\n        } else {\r\n            var txtIntput = document.getElementById('txtIntput').value;\r\n\r\n            var lineInputs = txtIntput.split(split);\r\n            txtArr = processingReplace(lineInputs, regex, txtArr);\r\n            document.getElementById('output').textContent = txtArr.join(split);\r\n\r\n        }\r\n    };\r\n\r\n    function processingReplace(lineInputs, regex, txtArr) {\r\n        var trSplitLine = document.getElementById('splitRegex').value;\r\n        var trSplitElement = document.getElementById('splitChildRegex').value;\r\n        for (var i = 0; i < lineInputs.length; i++) {\r\n            if (regex !== '') {\r\n\r\n                var trLines = regex.split(trSplitLine);\r\n                var trResult = lineInputs[i];\r\n                for (var trLine = 0; trLine < trLines.length; trLine++) {\r\n                    var trElements = trLines[trLine].split(trSplitElement);\r\n                    trResult = trResult.replaceAll(trElements[0], trElements[1]);\r\n                }\r\n                txtArr.push(trResult);\r\n            }\r\n        }\r\n        return txtArr;\r\n    }\r\n    const onChooseText =() =>{\r\n        var txtIntput = document.getElementById('txtIntput');\r\n        var inputfile = document.getElementById('inputfile');\r\n        inputfile.style.display = \"none\";\r\n        txtIntput.style.display = \"block\";\r\n\r\n    };\r\n    const onChooseRadio =() =>{\r\n        var txtIntput = document.getElementById('txtIntput');\r\n        var inputfile = document.getElementById('inputfile');\r\n        inputfile.style.display = \"block\";\r\n        txtIntput.style.display = \"none\";\r\n\r\n    };\r\nreturn(\r\n    <div>\r\n        <div class='option block'>\r\n        <div>\r\n            <div id=\"rdTypeInput\">\r\n                <input type=\"radio\" id=\"rdFile\" name=\"typeInput\" value=\"file\" onClick={() => onChooseRadio()}/> File\r\n                <input type=\"radio\" id=\"rdText\" name=\"typeInput\" value=\"text\" checked=\"checked\" onClick={() => onChooseText()}/> Text\r\n            </div>\r\n            <br/>\r\n            {/* <!-- <input type=\"text\" id=\"splitInput\"> --> */}\r\n            <br/>\r\n            <input type=\"text\" id=\"splitRegex\"/>\r\n            <br/>\r\n            <input type=\"text\" id=\"splitChildRegex\"/>\r\n        </div>\r\n    </div>\r\n    <div class='dataInput block'>\r\n        <div class='option-left'>\r\n            <div>input</div>\r\n            <input type=\"file\" accept=\"text/plain\" name=\"inputfile\" id=\"inputfile\"/>\r\n            <textarea id='txtIntput'></textarea>\r\n        </div>\r\n        <div class='option-right'>\r\n            <div>#$%^*()</div>\r\n            <textarea id='regex'></textarea>\r\n            <br/>\r\n        </div>\r\n    </div>\r\n    <br/>\r\n    <input type='submit' id='execute' value='exc' onClick={() => onProcess()}/>\r\n    <div class='block'>\r\n        <p>result:</p>\r\n        <textarea id='output'></textarea>\r\n    </div>\r\n    </div>\r\n\r\n)\r\n}\r\nexport default ReplaceProcess;","// this file is converted from javascript to reactjs so some code is not optimized\r\nimport React, { useEffect } from \"react\";\r\nimport '../common/style.css';\r\n\r\nconst MediaProcess = () => {\r\n    useEffect(() => {\r\n        document.getElementById('txtWidth').value = '640';\r\n        document.getElementById('txtHeight').value = '390';\r\n\r\n    }, []);\r\n\r\n    const onProcess = () => {\r\n        var txtSrcMedia = document.getElementById('txtSrcMedia').value;\r\n        var url = txtSrcMedia;\r\n        if (txtSrcMedia.indexOf('|') !== 0) {\r\n            url = 'https://www.youtube.com/embed/' + txtSrcMedia.substring(txtSrcMedia.lastIndexOf('/') + 1, txtSrcMedia.length).trim();\r\n        } else {\r\n            url = url.substring(1, url.length);\r\n        }\r\n        document.getElementById('iFMedia').src = url;\r\n    };\r\n    const onResize = () => {\r\n        var txtWidth = document.getElementById('txtWidth');\r\n        var txtWidthValue = txtWidth.value;\r\n        var txtHeight = document.getElementById('txtHeight').value;\r\n        document.getElementById('iFMedia').setAttribute(\"style\", `width:${txtWidthValue}px; height:${txtHeight}px`);\r\n    };\r\n    const onPressBtnVerySmall = () => {\r\n        document.getElementById('iFMedia').setAttribute(\"style\", `width:100px; height:80px`);\r\n    };\r\n    const onPressBtnSmall = () => {\r\n        document.getElementById('iFMedia').setAttribute(\"style\", `width:70px; height:50px`);\r\n    };\r\n    const onPressBtnMedium = () => {\r\n        document.getElementById('iFMedia').setAttribute(\"style\", `width:1200px; height:700px`);\r\n    };\r\n    const onPressBtnBig = () => {\r\n        document.getElementById('iFMedia').setAttribute(\"style\", `width:100%; height:1500px`);\r\n    };\r\n    const onHideAll = () => {\r\n        document.getElementById('control').style.display = \"none\";\r\n    };\r\n    const onShowAll = () => {\r\n        document.getElementById('control').style.display = \"block\";\r\n    };\r\n    const onChangeWith = (value) => {\r\n        document.getElementById('txtHeight').value = value * 0.7;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <iframe title=\"this is a video, clear!\" width=\"420\" height=\"315\" id='iFMedia' src=\"\">\r\n            </iframe> <br />\r\n            <div id='control'>\r\n                <input type=\"text\" id=\"txtSrcMedia\" /> <br />\r\n                <input type='submit' value=\"Load\" id='btnExecute' onClick={() => onProcess()} />\r\n                <br />\r\n                <div class='option'>\r\n                    <div class='option-left'>\r\n                        <p>width:</p>\r\n                        <input type=\"text\" id=\"txtWidth\" onChange={(e) => {\r\n                            onChangeWith(e.target.value)\r\n                        }}\r\n                        />\r\n                        <p>Height:</p>\r\n                        <input type=\"text\" id=\"txtHeight\" />\r\n                        <br />\r\n                        <input type='submit' value=\"Resize\" id='btnResize' onClick={() => onResize()} />\r\n                    </div>\r\n                    <div class='option-right'> <br />\r\n                        <input type='submit' value=\"100x80\" id='btnVerySmall' onClick={() => onPressBtnVerySmall()} />\r\n                        <input type='submit' value=\"70x50\" id='btnSmall' onClick={() => onPressBtnSmall()} />\r\n                        <input type='submit' value=\"1200x700\" id='btnMedium' onClick={() => onPressBtnMedium()} />\r\n                        <input type='submit' value=\"100%\" id='btnBig' onClick={() => onPressBtnBig()} />\r\n                        <br /><br />\r\n                        <textarea id='temp'></textarea>\r\n                    </div>\r\n                </div>\r\n                <input type='submit' value=\"H\" id='btnHide' onClick={() => onHideAll()} />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <input type='submit' value=\"S\" id='btnShow' onClick={() => onShowAll()} />\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default MediaProcess;","export default {\r\n  notify: {\r\n    sheetDefault: \"Words1!A1:C100\",\r\n  },\r\n  listen: {\r\n    sheetDefault: \"Listen1!A1:C100\"\r\n  },\r\n    apiKey: \"AIzaSyBXTCDVZLRPsWanb_ab5Lp9GJa1upX8bf8\",\r\n    clientId: \"897570143608-dvfjhqfsi125cne619dvu3qqfdep6ui6.apps.googleusercontent.com\",\r\n    scope: \"https://www.googleapis.com/auth/spreadsheets.readonly\",\r\n    discoveryDocs: \r\n      [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\r\n    spreadsheetId: \"1w_LXJm2Vsw11IlhyuwaMJEWQLT36kgrJ3fJUQwA37fg\",\r\n    // sheet: \"Words1!A1:C100\",\r\n    }","// this is a tools for studying english\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../../common/style.css';\r\nimport _ from 'lodash';\r\nimport '../../common/styleTemplate.css';\r\nimport { FaRegFrown, FaRegSmile, FaVolumeUp } from 'react-icons/fa';\r\n\r\nconst PractWords = (props) => {\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [errorMs, setErrorMs] = useState(\"\");\r\n    const [showAns, setShowAns] = useState('');\r\n    const [lastAnsw, setLastAnsw] = useState('');\r\n    const [arrLineTemp, setArrLineTemp] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect []\");\r\n    }, []);\r\n    useEffect(() => {\r\n\r\n        setArrLineTemp(_.cloneDeep(props.items));\r\n        console.log(\"useEffect [props.items]\");\r\n    }, [props.items]);\r\n\r\n    useEffect(() => {\r\n        if (props.isLoadQuestion) {\r\n            onChangeQuestion();\r\n        }\r\n        console.log(\"useEffect [props.isLoadQuestion]\");\r\n\r\n        // eslint-disable-next-line\r\n    }, [props.isLoadQuestion]);\r\n\r\n\r\n    const onChangeQuestion = () => {\r\n        if (!_.isEmpty(props.items)) {\r\n            let item = null;\r\n            let arrTemp = _.isEmpty(arrLineTemp) ? _.cloneDeep(props.items) : _.cloneDeep(arrLineTemp);\r\n            if (props.oderRandom === 'random') {\r\n                let index = Math.floor(Math.random() * arrTemp.length);\r\n\r\n                item = arrTemp[index];\r\n                arrTemp.splice(index, 1);\r\n\r\n            } else {\r\n                item = arrTemp[0];\r\n                arrTemp.shift();\r\n            }\r\n            setArrLineTemp(arrTemp);\r\n\r\n            if (_.isEmpty(item.customDefine)) {\r\n                setQuestion(item.vi);\r\n            } else {\r\n                setQuestion(item.customDefine);\r\n            }\r\n            setAnswer(item.eng);\r\n            setShowAns(\"\");\r\n\r\n\r\n        }\r\n    };\r\n    const onCheck = () => {\r\n        var ans = document.getElementById('answer').value;\r\n        if (!_.isNull(ans) && !_.isNull(answer)) {\r\n            var answ = answer.replaceAll('.', '');\r\n            if (ans.trim().toUpperCase() === answ.toUpperCase().trim()) {\r\n                onChangeQuestion();\r\n                setErrorMs('correct!');\r\n                document.getElementById('answer').value = \"\";\r\n                setLastAnsw(answer);\r\n            } else {\r\n                setErrorMs('wrong!');\r\n            }\r\n        }\r\n    };\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            onCheck();\r\n        }\r\n    }\r\n    const onShow = () => {\r\n        if (_.isEmpty(showAns)) {\r\n            setShowAns(answer);\r\n        } else {\r\n            setShowAns(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='prac'>\r\n            <div>{question}</div><br />\r\n            <input type=\"text\" id='answer' onKeyDown={e => handleKeyDown(e)} /><br />\r\n            <div className='msg'>{errorMs === 'wrong!' ? <FaRegFrown /> : <FaRegSmile />}</div>\r\n            <input className='button-33' type='submit' value=\"Check\" id='btnSubmit' onClick={() => onCheck()} />\r\n            <input className='button-12' type='submit' value=\"Show Ans\" id='btnShowAns' onClick={() => onShow()} />\r\n            <div>{showAns}{_.isEmpty(showAns) ? <div></div> : <FaVolumeUp className='iconSound' onClick={() => props.speakText(showAns, true)} />}</div>\r\n            <div>{_.isEmpty(lastAnsw) ? <div></div> : <div>Last : {lastAnsw}<FaVolumeUp className='iconSound' onClick={() => props.speakText(lastAnsw, true)} /></div>} </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PractWords;","// this is a tools for studying english\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../../common/style.css';\r\nimport '../../common/styleTemplate.css';\r\nimport _ from 'lodash';\r\nimport { gapi } from 'gapi-script';\r\nimport config from '../../common/config.js';\r\nimport { load } from './api/sheetDataRepository.js';\r\nimport PractWords from './practWords.jsx'\r\nimport { FaCircleNotch } from 'react-icons/fa';\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\nimport { FaVolumeUp } from 'react-icons/fa';\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst NotifyAuto = () => {\r\n    const onEnd = () => {\r\n        // You could do something here after speaking has finished\r\n    };\r\n    const { speak, voices } = useSpeechSynthesis({\r\n        onEnd,\r\n    });\r\n    const [items, setItems] = useState([]);\r\n    const [oderRandomS, setOderRandomS] = useState('random');\r\n    const [isLoadQuestion, setIsLoadQuestion] = useState(false);\r\n\r\n    const [voiceIndex, setVoiceIndex] = useState(0);\r\n    const [voiceIndexVie, setVoiceIndexVie] = useState(0);\r\n    const [rate, setRate] = useState(0.6);\r\n    const [sheet, setSheet] = useState(\"\");\r\n    const [speakStrEng, setSpeakStrEng] = useState(\"\");\r\n    const [speakStrVie, setSpeakStrVie] = useState(\"\");\r\n    const [strContinue, setStrContinue] = useState(\"\");\r\n    const [lineSheet, setLineSheet] = useState([]);\r\n    const [cookies, setCookie] = useCookies(['cookieContinue']);\r\n\r\n    const [isStop, setIsStop] = useState(true);\r\n    const [intervalId, setIntervalId] = useState(-1);\r\n    const [countNotify, setCountNotify] = useState(0);\r\n\r\n    const styleFlexRow = { display: 'flex', flexDirection: 'row' };\r\n    const styleContainerRatePitch = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginBottom: 12,\r\n    };\r\n    const SPLIT_WORD = ':';\r\n    const IND_SPEAK_NOTI_VOICE = 'noti-voice';\r\n    const IND_SPEAK_NO_VOICE = 'no-voice';\r\n    const IND_SPEAK_NO_NOTI = 'no-noti';\r\n    const IND_SPEAK_NOTI_NO_VIE = 'noti-no-vie';\r\n    const IND_SPEAK_NO_NOTI_NO_VIE = 'no-noti-no-vie';\r\n    const IND_SPEAK_NO_NOTI_ENG = 'noti-eng-voice';\r\n    const IND_SPEAK_ALL_ENG = 'all-eng';\r\n    const IND_SPEAK_NOTI_ENG = 'noti-eng';\r\n\r\n    const IND_VALUE_ON = 'On';\r\n    const IND_VALUE_OFF = 'Off';\r\n   \r\n    /**  */\r\n    useEffect(() => {\r\n        document.getElementById('timeValue').value = '50';\r\n        document.getElementById('pracWord').style.display = \"none\";\r\n        document.getElementById('control').style.display = \"block\";\r\n        document.getElementById('notify-control').style.display = \"block\";\r\n        getDataFromExcel();\r\n        // setLineSheet(getListLineField());\r\n        if(!_.isEmpty(cookies)){\r\n            setStrContinue(cookies.cookieContinue);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        voices.forEach((option, index) => {\r\n            if(\r\n                // option.name.includes(\"Vietnam\")||\r\n            option.lang.includes(\"vi-VN\")){\r\n                setVoiceIndexVie(index);\r\n            }\r\n            if(\r\n                // option.name.includes(\"English\")||option.name.includes(\"United States\")||\r\n            option.lang.includes(\"en-US\")){\r\n                setVoiceIndex(index);\r\n            }\r\n        });\r\n    }, [voices]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect [countNotify]\");\r\n        let valueTime = document.getElementById('timeValue').value;\r\n            if(!isStop){\r\n                setIntervalId(setTimeout(() => {\r\n                    execute();\r\n                setCountNotify(countNotify+1);\r\n            }, (valueTime * 1000)));\r\n        }\r\n        }, [countNotify]);\r\n\r\n    useEffect(() => {\r\n        getDataFromExcel();\r\n        console.log(\"useEffect [sheet]\");\r\n    }, [sheet]);\r\n\r\n\r\n    useEffect(() => {\r\n        onGSheetApi();\r\n        console.log(\"useEffect [items]\");\r\n    }, [items]);\r\n\r\n    useEffect(() => {\r\n        let expires = new Date()\r\n        expires.setDate(expires.getDate()+ 100);\r\n       setCookie('cookieContinue',strContinue, { path: '/',  expires})\r\n       console.log('useEffect strContinue');\r\n        console.log(strContinue);\r\n        console.log(cookies);\r\n    }, [strContinue]);\r\n\r\n    /** */\r\n    const getDataFromExcel = () => {\r\n        gapi.load(\"client:auth2\", initClient);\r\n\r\n    }\r\n\r\n    /** */\r\n    const onGSheetApi = () => {\r\n        var arrList = [];\r\n        if (!_.isEmpty(items)) {\r\n            var arrIndexNotNotify = _.isEmpty(strContinue)? []: strContinue.split(',').map(Number);\r\n            if (!_.isEmpty(arrIndexNotNotify) && arrIndexNotNotify.length > 0) {\r\n                arrIndexNotNotify.sort((a, b) => b - a);\r\n                let listTemp=_.cloneDeep(items);\r\n                arrIndexNotNotify.forEach(inx => {\r\n                     listTemp.splice(inx, 1);\r\n                });\r\n                 setLineSheet(listTemp);\r\n              }else{\r\n                setLineSheet(_.cloneDeep(items));\r\n              }\r\n            for (let i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                var meaning = item.vi;\r\n                if (!_.isEmpty(item.customDefine)) {\r\n                    meaning = item.customDefine;\r\n                }\r\n                if (!_.isEmpty(item.eng) && item.eng.length > 0) {\r\n                    if (_.isEmpty(meaning)) {\r\n                        arrList.push(item.eng);\r\n                    } else {\r\n                        arrList.push(item.eng + ' ' + SPLIT_WORD + ' ' + meaning);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var strResult = '';\r\n        for (let j = 0; j < arrList.length; j++) {\r\n            if(!_.isEmpty(arrList[j])){\r\n                strResult += arrList[j];\r\n                strResult += '\\n';\r\n            }\r\n\r\n        }\r\n        document.getElementById('txtField').value = strResult;\r\n    }\r\n\r\n    /** */\r\n    const initClient = () => {\r\n        //custom sheet\r\n        var vsheet = sheet;\r\n        gapi.client.init({\r\n            apiKey: config.apiKey,\r\n            clientId: config.clientId,\r\n            discoveryDocs: config.discoveryDocs,\r\n            scope: config.scope\r\n        })\r\n            .then(() => {\r\n                load(onLoad, vsheet);\r\n            })\r\n    };\r\n\r\n    /** */\r\n    const onLoad = (data, error) => {\r\n        if (data) {\r\n            const result = data.items;\r\n            let arr = [];\r\n\r\n            result.forEach(item => {\r\n                if (!_.isEmpty(item) && !_.isEmpty(item.eng)) {\r\n                    arr.push(item);\r\n                }\r\n            });\r\n\r\n            setItems(arr);\r\n            console.log(arr);\r\n        } else {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    /** */\r\n    const execute =  () => {\r\n        console.log('onStart2');\r\n            let line = null;\r\n\r\n            let oderRandom = document.getElementById(\"slGenData\").value;\r\n\r\n            if (oderRandom === 'random') {\r\n                let index = Math.floor(Math.random() * lineSheet.length);\r\n                line = lineSheet[index];\r\n                lineSheet.splice(index, 1);\r\n            } else {\r\n                line = lineSheet[0];\r\n                lineSheet.shift();\r\n            }\r\n            console.log(strContinue);\r\n            let indexOrg = items.findIndex(x => x.eng === line.eng);\r\n            console.log(''+ strContinue + (_.isEmpty(strContinue) ? indexOrg.toString() : ',' + indexOrg.toString()));\r\n            const strC = (_.isEmpty(strContinue) ? indexOrg.toString() : String(strContinue)  +',' + indexOrg.toString())\r\n            setStrContinue(strC);\r\n            if (_.isEmpty(lineSheet)) {\r\n                setLineSheet(_.cloneDeep(items));\r\n                setStrContinue('');\r\n            }\r\n\r\n            onNotiExc(line);\r\n\r\n    };\r\n\r\n    /** */\r\n    const onNotiExc = (line) => {\r\n        console.log(line);\r\n        if (!window.Notification) {\r\n            console.log('Browser does not support notifications.');\r\n        } else {\r\n            // check if permission is already granted\r\n            if (Notification.permission === 'granted') {\r\n                // show notification here\r\n                var isSpeak = document.getElementById('slIsUseVoice').value;\r\n                if (!_.isEmpty(line)) {\r\n                    var engStr = line.eng;\r\n                    var viStr = line.vi;\r\n                    if (!_.isEmpty(line.customDefine)) {\r\n                        viStr = line.customDefine;\r\n                    } \r\n                    setSpeakStrEng(engStr);\r\n                    setSpeakStrVie(viStr);\r\n\r\n                    //because state is not synchronized, can't use state in this line(in loop)\r\n\r\n                    if (_.isEqual(isSpeak, IND_SPEAK_NOTI_VOICE) || _.isEqual(isSpeak, IND_SPEAK_NO_NOTI)\r\n                        || _.isEqual(isSpeak, IND_SPEAK_NOTI_NO_VIE) || _.isEqual(isSpeak, IND_SPEAK_NO_NOTI_NO_VIE)\r\n                        || _.isEqual(isSpeak, IND_SPEAK_NO_NOTI_ENG) || _.isEqual(isSpeak, IND_SPEAK_ALL_ENG)) {\r\n\r\n                        speakText(engStr, true);\r\n                    }\r\n\r\n                    if (_.isEqual(isSpeak, IND_SPEAK_NOTI_VOICE) || _.isEqual(isSpeak, IND_SPEAK_NO_NOTI)\r\n                        || _.isEqual(isSpeak, IND_SPEAK_NO_NOTI_ENG)) {\r\n\r\n                        speakText(viStr, false);\r\n                    }\r\n                    if (_.isEqual(isSpeak, IND_SPEAK_NO_NOTI_ENG) || _.isEqual(isSpeak, IND_SPEAK_ALL_ENG)\r\n                        || _.isEqual(isSpeak, IND_SPEAK_NOTI_ENG)) {\r\n                        var notification = new Notification(engStr);\r\n                    }\r\n\r\n                    if (_.isEqual(isSpeak, IND_SPEAK_NOTI_VOICE) || _.isEqual(isSpeak, IND_SPEAK_NO_VOICE)\r\n                        || _.isEqual(isSpeak, IND_SPEAK_NOTI_NO_VIE)) {\r\n                            let str =engStr+\":\"+viStr;\r\n                        var notification = new Notification(str);\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                // request permission from user\r\n                Notification.requestPermission().then(function (p) {\r\n                    if (p === 'granted') {\r\n                        // show notification here\r\n                    } else {\r\n                        console.log('User blocked notifications.');\r\n                    }\r\n                }).catch(function (err) {\r\n                    console.error(err);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** */\r\n    const onStop = () => {\r\n        setIsStop(true);\r\n        clearInterval(intervalId);\r\n    };\r\n    const onStart = () => {\r\n        if(isStop){\r\n            setIsStop(false);\r\n            execute();\r\n            setCountNotify(countNotify+1);\r\n        }\r\n    };\r\n\r\n    /** */\r\n    const onShowAll = () => {\r\n        var prac = document.getElementById('control');\r\n        if (prac.style.display === \"block\") {\r\n\r\n            document.getElementById('control').style.display = \"none\";\r\n        } else {\r\n            document.getElementById('control').style.display = \"block\";\r\n\r\n        }\r\n    };\r\n\r\n    /** */\r\n    const onShowPract = () => {\r\n        var prac = document.getElementById('pracWord');\r\n        setIsLoadQuestion(true);\r\n\r\n        if (prac.style.display === \"block\") {\r\n\r\n            document.getElementById('pracWord').style.display = \"none\";\r\n        } else {\r\n            document.getElementById('pracWord').style.display = \"block\";\r\n            onHideWhenPrac();\r\n        }\r\n\r\n    };\r\n\r\n    /** */\r\n    const onChangeOrder = (value) => {\r\n        setOderRandomS(value);\r\n    }\r\n\r\n    /** */\r\n    const onChangeIsUseVoice = (value) => {\r\n        // setIsUseVoice(value);\r\n        if (_.isEqual(value, IND_SPEAK_NO_VOICE)) {\r\n            document.getElementById('sound-control').style.display = \"none\";\r\n        } else {\r\n            document.getElementById('sound-control').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    /** */\r\n    const onHideWhenPrac = () => {\r\n        var prac = document.getElementById('notify-control');\r\n        if (prac.style.display === \"block\") {\r\n            document.getElementById('notify-control').style.display = \"none\";\r\n        } else {\r\n            document.getElementById('notify-control').style.display = \"block\";\r\n        }\r\n    };\r\n\r\n    const speakText = (speakStr, isEng) => {\r\n\r\n        var vVoice = document.getElementById('voice').value;\r\n        var vVoiceVie = document.getElementById('voiceVie').value;\r\n        var vrate = document.getElementById('rate').value;\r\n\r\n        var utterance = new window.SpeechSynthesisUtterance();\r\n\r\n        utterance.text = speakStr;\r\n        // utterance.lang = 'en-US';\r\n        utterance.rate = vrate;\r\n        // utterance.pitch = pitch;\r\n        if (isEng) {\r\n            utterance.voice = voices[vVoice];\r\n        } else {\r\n            utterance.voice = voices[vVoiceVie];\r\n        }\r\n        utterance.volume = 1;\r\n        speak(utterance);\r\n    }\r\n    const handleChangeCookie = e => {\r\n        setStrContinue( e.target.value);\r\n    };\r\n    /** */\r\n    return (\r\n        <div>\r\n            <div id='notify-control'>\r\n                <div className='option-noti block' id='control'>\r\n                    <div className='option-left'>\r\n                        <textarea title='f' id='txtField'></textarea>\r\n                        <div> {speakStrEng}:  {speakStrVie}{_.isEmpty(speakStrEng) ? <div></div> : <FaVolumeUp className='iconSound' onClick={() => speakText(speakStrEng, true)} />}</div><br />\r\n                    </div>\r\n                    <div className='option-right notify-right'>\r\n                        <select className='button-34' name=\"sheet\" id=\"slsheet\" onChange={(e) => {\r\n                            setSheet(e.target.value)\r\n                        }}>\r\n                            <option value=\"Words1!A1:C100\">Words1</option>\r\n                            <option value=\"Words2!A1:C100\">Words2</option>\r\n                            <option value=\"Words3!A1:C100\">Words3</option>\r\n                            <option value=\"Sentence1!A1:C500\">Sentence1</option>\r\n                            <option value=\"Sentence2!A1:C500\">Sentence2</option>\r\n                            <option value=\"Sentence3!A1:C500\">Sentence3</option>\r\n                        </select>\r\n\r\n                        <select className='button-33' name=\"genData\" id=\"slGenData\" onChange={(e) => {\r\n                            onChangeOrder(e.target.value)\r\n                        }}>\r\n                            <option value=\"random\">random</option>\r\n                            <option value=\"order\">order</option>\r\n                        </select>\r\n                        <select className='button-33' name=\"isUseVoice\" id=\"slIsUseVoice\" onChange={(e) => {\r\n                            onChangeIsUseVoice(e.target.value)\r\n                        }}>\r\n                            <option value={IND_SPEAK_ALL_ENG}>Notify Eng - Voice Eng</option>\r\n                            <option value={IND_SPEAK_NO_NOTI_ENG}>Notify Eng - Voice</option>\r\n                            <option value={IND_SPEAK_NOTI_VOICE}>Notify - Voice</option>\r\n                            <option value={IND_SPEAK_NO_VOICE}>Notify</option>\r\n                            <option value={IND_SPEAK_NO_NOTI}>Voice</option>\r\n                            <option value={IND_SPEAK_NOTI_NO_VIE}>notify - Voice Eng</option>\r\n                            <option value={IND_SPEAK_NO_NOTI_NO_VIE}>Voice Eng</option>\r\n                            <option value={IND_SPEAK_NOTI_ENG}>noti Eng</option>\r\n                        </select>\r\n\r\n                        <div id='sound-control'>\r\n                            <div>Voice 1:</div>\r\n                            <select className='button-33'\r\n                                id=\"voice\"\r\n                                name=\"voice\"\r\n                                value={voiceIndex || ''}\r\n                                onChange={(event) => {\r\n                                    setVoiceIndex(event.target.value);\r\n                                }}\r\n                            >\r\n                                <option value=\"\">Default</option>\r\n                                {voices.map((option, index) => (\r\n                                    <option key={option.voiceURI} value={index}>\r\n                                        {`${option.lang} - ${option.name}`}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <div style={styleContainerRatePitch}>\r\n                                <div style={styleFlexRow}>\r\n                                    <label htmlFor=\"rate\">Speed: </label>\r\n                                    <div className=\"rate-value\">{rate}</div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0.2\"\r\n                                    max=\"2\"\r\n                                    defaultValue=\"0.6\"\r\n                                    step=\"0.1\"\r\n                                    id=\"rate\"\r\n                                    onChange={(event) => {\r\n                                        setRate(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>Voice 2:</div>\r\n                            <select className='button-33'\r\n                                id=\"voiceVie\"\r\n                                name=\"voiceVie\"\r\n                                value={voiceIndexVie || ''}\r\n                                onChange={(event) => {\r\n                                    setVoiceIndexVie(event.target.value);\r\n                                }}\r\n                            >\r\n                                <option value=\"\">Default</option>\r\n                                {voices.map((option, index) => (\r\n                                    <option key={option.voiceURI} value={index}>\r\n                                        {`${option.lang} - ${option.name}`}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className='control-footer'>\r\n                    <input className='button-41' type='submit' value=\"Start\" id='btnStart' onClick={() => onStart()} />\r\n                    <button className='button-41' id='btnStop' onClick={() => onStop()} >Stop</button>\r\n                    <input className='button-23' type=\"text\" id='timeValue' />\r\n                    <input className='button-33' type='submit' value=\"Show\" id='btnShow' onClick={() => onShowAll()} />\r\n                    <input className='button-33' type='submit' value=\"Practice\" id='btnPract' onClick={() => onShowPract()} />\r\n                    <input className='button-59' type=\"submit\" id='isNotify' value={!isStop ? IND_VALUE_ON : IND_VALUE_OFF} /><br />\r\n                </div>\r\n            </div>\r\n            <textarea id=\"strContinue\" value = {strContinue} onChange={handleChangeCookie}></textarea>\r\n            {/* <FaStop/> */}\r\n            <div id='pracWord'>\r\n                <PractWords items={items} oderRandom={oderRandomS}\r\n                    speakText={speakText}\r\n                    isLoadQuestion={isLoadQuestion} />\r\n            </div>\r\n            <div id='btnHideWhenPrac' onClick={() => onHideWhenPrac()} ><FaCircleNotch /></div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NotifyAuto;","import config from '../../../common/config.js';\r\nimport _ from 'lodash';\r\n\r\nexport const load = (callback, sheet) => {\r\nwindow.gapi.client.load(\"sheets\", \"v4\", () => {\r\n  window.gapi.client.sheets.spreadsheets.values\r\n    .get({\r\n      spreadsheetId: config.spreadsheetId,\r\n      range: _.isEmpty(sheet)? config.notify.sheetDefault:sheet\r\n    })\r\n    .then(\r\n      response => {\r\n        const data = response.result.values;\r\n        console.log(data)\r\n        const items = data.filter(item => !_.isEmpty(item))\r\n        .map(item => ({\r\n          eng: item[0],\r\n          vi: item[1],\r\n          customDefine: item[2],\r\n        })) || [];\r\n        callback({\r\n          items\r\n        });\r\n      },\r\n      response => {\r\n        callback(false, response.result.error);\r\n      }\r\n    );\r\n});\r\n}\r\n\r\nexport const loadListenSheet = (callback, sheet) => {\r\nwindow.gapi.client.load(\"sheets\", \"v4\", () => {\r\n  window.gapi.client.sheets.spreadsheets.values\r\n    .get({\r\n      spreadsheetId: config.spreadsheetId,\r\n      range: _.isEmpty(sheet)? config.notify.sheetDefault:sheet\r\n    })\r\n    .then(\r\n      response => {\r\n        const data = response.result.values;\r\n        console.log(data)\r\n        const items = data.filter(item => !_.isEmpty(item))\r\n        .map(item => ({\r\n          eng: item[0],\r\n          vi: item[1],\r\n          classItem: item[2],\r\n        })) || [];\r\n        callback({\r\n          items\r\n        });\r\n      },\r\n      response => {\r\n        callback(false, response.result.error);\r\n      }\r\n    );\r\n});\r\n}\r\n","// this is a tools for studying english\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../../common/style.css';\r\nimport _ from 'lodash';\r\nimport '../../common/styleTemplate.css';\r\nimport { FaRegFrown, FaRegSmile, FaVolumeUp } from 'react-icons/fa';\r\nimport { gapi } from 'gapi-script';\r\nimport config from '../../common/config.js';\r\nimport { loadListenSheet } from './api/sheetDataRepository.js';\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\nconst ListenPract = () => {\r\n    const styleFlexRow = { display: 'flex', flexDirection: 'row' };\r\n    const styleContainerRatePitch = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginBottom: 12,\r\n    };\r\n    const ALL_WORDS = \"-1\";\r\n\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [errorMs, setErrorMs] = useState(\"\");\r\n    const [showAns, setShowAns] = useState('');\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [classItems, setClassItems] = useState([]);\r\n    const [sheet, setSheet] = useState(config.listen.sheetDefault);\r\n    const [voiceIndex, setVoiceIndex] = useState(0);\r\n    const [indexClass, setIndexClass] = useState();\r\n    const [ansList, setAnsList] = useState([]);\r\n    const [ansListTemp, setAnsListTemp] = useState([]);\r\n    const [rate, setRate] = useState(0.9);\r\n    const [lastAnsw, setLastAnsw] = useState('');\r\n\r\n    const onEnd = () => {\r\n        // You could do something here after speaking has finished\r\n    };\r\n    const { speak, voices } = useSpeechSynthesis({\r\n        onEnd,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect []\");\r\n        getDataFromExcel();\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        if (_.isEqual(indexClass, ALL_WORDS)) {\r\n            let itemAns = ansList.filter(item => {\r\n                return item.eng === question;\r\n            });\r\n            let arr = ansList.filter(item => {\r\n                return item.classItem === itemAns[0].classItem;\r\n            });\r\n            setAnsListTemp(arr);\r\n        } else {\r\n            setAnsListTemp(ansList);\r\n        }\r\n    }, [question]);\r\n\r\n    useEffect(() => {\r\n        onChangeQuestion();\r\n    }, [ansList]);\r\n    useEffect(() => {\r\n        if (_.isEmpty(items)) {\r\n            return;\r\n        }\r\n        let indexTemp = -1;\r\n        let arrClassItem = [];\r\n        items.forEach((item) => {\r\n            if (!_.isEmpty(item.classItem) && item.classItem !== indexTemp) {\r\n                arrClassItem.push(item);\r\n                indexTemp = item.classItem;\r\n            }\r\n        });\r\n\r\n        setClassItems(arrClassItem);\r\n        setIndexClass(ALL_WORDS);\r\n    }, [items]);\r\n    useEffect(() => {\r\n        voices.forEach((option, index) => {\r\n            if (\r\n                // option.name.includes(\"English\")||option.name.includes(\"United States\")||\r\n                option.lang.includes(\"en-US\")) {\r\n                setVoiceIndex(index);\r\n            }\r\n        });\r\n    }, [voices]);\r\n\r\n    useEffect(() => {\r\n        if (!_.isEmpty(answer)) {\r\n            onCheck();\r\n        }\r\n    }, [answer]);\r\n\r\n    useEffect(() => {\r\n        // let index=indexClass;\r\n        let arrAnsList = [];\r\n        if (indexClass === ALL_WORDS) {\r\n            // let quest = items[(Math.random() * ansList.length) | 0];\r\n            // index = quest.classItem;\r\n            arrAnsList = items;\r\n        } else {\r\n            items.forEach(item => {\r\n                if (item.classItem === indexClass) {\r\n                    arrAnsList.push(item);\r\n                }\r\n            });\r\n        }\r\n        setAnsList(arrAnsList);\r\n        // eslint-disable-next-line\r\n    }, [indexClass]);\r\n    /** */\r\n    const getDataFromExcel = () => {\r\n        gapi.load(\"client:auth2\", initClient);\r\n\r\n    }\r\n    /** */\r\n    const initClient = () => {\r\n        //custom sheet\r\n        var vsheet = sheet;\r\n        gapi.client.init({\r\n            apiKey: config.apiKey,\r\n            clientId: config.clientId,\r\n            discoveryDocs: config.discoveryDocs,\r\n            scope: config.scope\r\n        })\r\n            .then(() => {\r\n                loadListenSheet(onLoad, vsheet);\r\n            })\r\n    };\r\n\r\n    /** */\r\n    const onLoad = (data, error) => {\r\n        if (data) {\r\n            const result = data.items;\r\n            let arr = [];\r\n\r\n            result.forEach(item => {\r\n                if (!_.isEmpty(item) && !_.isEmpty(item.eng)) {\r\n                    arr.push(item);\r\n                }\r\n            });\r\n\r\n            setItems(arr);\r\n            console.log(arr);\r\n        } else {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const onChangeQuestion = () => {\r\n        if (!_.isEmpty(ansList)) {\r\n            let ans = ansList[(Math.random() * ansList.length) | 0];\r\n            setQuestion(ans.eng);\r\n            speakText(ans.eng, true);\r\n            setShowAns(\"\");\r\n            setAnswer(\"\");\r\n        }\r\n    };\r\n    const onCheck = () => {\r\n        if (!_.isNull(answer)) {\r\n            if (answer.trim().toUpperCase() === question.toUpperCase().trim()) {\r\n                onChangeQuestion();\r\n                setErrorMs('correct!');\r\n                document.getElementById('answer').value = \"\";\r\n                setLastAnsw(answer);\r\n            } else {\r\n                setErrorMs('wrong!');\r\n            }\r\n        }\r\n    };\r\n\r\n    const onShow = () => {\r\n        if (_.isEmpty(showAns)) {\r\n            setShowAns(question);\r\n        } else {\r\n            setShowAns(\"\");\r\n        }\r\n    }\r\n    const speakText = (speakStr, isEng) => {\r\n        var vVoice = document.getElementById('voice').value;\r\n        var vrate = document.getElementById('rate').value;\r\n        var utterance = new window.SpeechSynthesisUtterance();\r\n\r\n        utterance.text = speakStr;\r\n        // utterance.lang = 'en-US';\r\n        utterance.rate = vrate;\r\n        if (isEng) {\r\n            utterance.voice = voices[vVoice];\r\n        }\r\n        utterance.volume = 1;\r\n        speak(utterance);\r\n    }\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setAnswer(e.target.value)\r\n        }\r\n    }\r\n    const changeAns = (e) => {\r\n        setAnswer(e.target.value);\r\n    }\r\n    return (\r\n        <div className='prac'>\r\n            <div className=\"\">\r\n                <select className='button-33' name=\"isUseVoice\" onChange={(e) => {\r\n                    setIndexClass(e.target.value)\r\n                }}>\r\n                    <option value={ALL_WORDS}>All Word</option>\r\n                    {classItems.map((item) => (\r\n                        <option value={item.classItem} key={item.eng}>\r\n                            {`${item.eng}`}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select className='button-33 inline'\r\n                    id=\"voice\"\r\n                    name=\"voice\"\r\n                    value={voiceIndex || ''}\r\n                    onChange={(event) => {\r\n                        setVoiceIndex(event.target.value);\r\n                    }}\r\n                >\r\n                    <option value=\"\">Default</option>\r\n                    {voices.map((option, index) => (\r\n                        <option key={option.voiceURI} value={index}>\r\n                            {`${option.lang} - ${option.name}`}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <div style={styleContainerRatePitch}>\r\n                    <div style={styleFlexRow}>\r\n                        <label htmlFor=\"rate\">Speed: </label>\r\n                        <div className=\"rate-value\">{rate}</div>\r\n                    </div>\r\n                    <input\r\n                        type=\"range\"\r\n                        min=\"0.2\"\r\n                        max=\"2\"\r\n                        defaultValue=\"0.6\"\r\n                        step=\"0.1\"\r\n                        id=\"rate\"\r\n                        onChange={(event) => {\r\n                            setRate(event.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>{_.isEmpty(question) ? <div></div> : <FaVolumeUp className='iconSound' onClick={() => speakText(question, true)} />}</div>\r\n            </div>\r\n            <input type=\"text\" id='answer' onKeyDown={e => handleKeyDown(e)} />\r\n            <br />\r\n            <select className='button-33' id='answerCmb' onChange={(e) => {\r\n                changeAns(e)\r\n            }}\r\n                value={answer || ''}\r\n            > <option value=\"\">Choose</option>\r\n                {ansListTemp.map((item) => (\r\n                    <option value={item.eng} key={item.eng}>\r\n                        {`${item.eng}`}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <br />\r\n            <div className='msg'>{errorMs === 'wrong!' ? <FaRegFrown /> : <FaRegSmile />}</div>\r\n            {errorMs}<br />\r\n            <input className='button-33' type='submit' value=\"Check\" id='btnSubmit' onClick={() => onCheck()} />\r\n            <input className='button-12' type='submit' value=\"Show Ans\" id='btnShowAns' onClick={() => onShow()} />\r\n            <div>{showAns}</div>\r\n            <div>{_.isEmpty(lastAnsw) ? <div></div> : <div>Last : {lastAnsw}<FaVolumeUp className='iconSound' onClick={() => speakText(lastAnsw, true)} /></div>} </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListenPract;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport SqlProcess from './components/sqlProcess.jsx'\r\nimport JsonProcess from './components/jsonProcess.jsx'\r\nimport ReplaceProcess from './components/replaceProcess.jsx'\r\nimport MediaProcess from './components/mediaProcess.jsx'\r\nimport NotifyAuto from './components/Elearning/notifyAuto.jsx'\r\nimport ListenPract from './components/Elearning/listenPract.jsx'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { FaHome } from 'react-icons/fa';\r\nimport {Link, Route,  Routes, BrowserRouter } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <BrowserRouter>\r\n    <div><Link to=\"/\"><FaHome/></Link></div>\r\n    <br/>\r\n    <Routes>\r\n        <Route exact path=\"/\" element={<App/>} />\r\n         <Route path=\"/sql\" element={<SqlProcess/>} />\r\n         <Route path=\"/json\" element={<JsonProcess/>} />\r\n         <Route path=\"/replace\" element={<ReplaceProcess/>} />\r\n         <Route path=\"/media\" element={<MediaProcess/>} />\r\n         <Route path=\"/notify\" element={<NotifyAuto/>} />\r\n         <Route path=\"/listen\" element={<ListenPract/>} />\r\n          \r\n      </Routes>\r\n    </BrowserRouter>\r\n    {/* <App /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}